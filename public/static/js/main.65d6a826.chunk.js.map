{"version":3,"sources":["hooks.ts","reducer/creativeGallerySlice.ts","config.ts","components/NavbarLogo.tsx","lib/externalLinkPaths.ts","components/ExternalLink.tsx","components/NavDesktopViewItems.tsx","components/NavBar.tsx","components/Menu.tsx","components/Footer.tsx","components/Logo.tsx","components/HeaderText.tsx","views/Home.tsx","views/About.tsx","lib/projectsTable.ts","images/jungle-swap.png","images/trackertools.png","images/letter-shooter.png","components/ProjectDetails.tsx","views/Projects.tsx","images/Bootstrap-Logo.svg","images/Bulma-Logo.svg","images/Cloudinary-Logo.svg","images/Cypress-Logo.svg","images/GitHub-Logo.svg","images/GitLab-Logo.svg","images/JavaScript(ES6)-Logo.svg","images/MongoDB-Logo.svg","images/NodeJS-Logo.svg","images/NPM-Logo.svg","images/React-Logo.svg","images/Redux-Logo.svg","images/Sass-Logo.svg","images/TypeScript-Logo.svg","images/Visual-Studio-Code-Logo.svg","images/Vue.js-Logo.svg","images/Webstorm-Logo.svg","lib/toolsLogos.ts","images/Yarn-Logo.svg","views/TechStack.tsx","lib/requestIO.ts","components/ContactLink.tsx","components/ContactForm.tsx","components/ErrorMessageOutput.tsx","views/Contact.tsx","views/PageNotFound.tsx","components/ErrorModal.tsx","App.tsx","store.ts","locales/en.ts","i18n.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","apiPath","process","rejectWithValue","data","Error","createRequest","createAsyncThunk","newRequest","a","axios","post","response","errorMessage","creativeGallerySlice","createSlice","name","initialState","menuItem","isDesktop","isMenuVisible","isOpenMenu","isCloseMenu","isCreatingRequest","reducers","setIsDesktop","state","action","payload","setIsMenuVisible","setIsOpenMenu","setIsCloseMenu","setMenuItem","setIsCreatingRequest","setErrorMessage","extraReducers","builder","addCase","fulfilled","rejected","actions","NavbarLogo","className","resumePath","ExternalLink","linkPath","linkClass","linkText","faClass","onClickHandler","to","pathname","target","rel","onClick","NavDesktopViewItems","creativeGallery","dispatch","t","useTranslation","activateLink","currentMenuItem","NavBar","useEffect","handleCheckWindowWidthCallback","windowObject","eventHandler","eventHandlerCallback","addEventListener","addWindowWidthHandler","window","innerWidth","removeEventListener","icon","faBars","setTimeout","Menu","handleCloseMenu","linkProperties","fadeInSpeed","fadeOutSpeed","menuProperties","faTimes","Footer","year","Date","getFullYear","Logo","HeaderText","headlines","borderColorName","headline","subheadline","borderColor","Home","scroll","scrollToTop","About","projects","projectName","projectPicturePath","projectVideoPath","projectDescription","deployedPath","gitHubClientPath","gitHubServerPath","ProjectDetails","projectItem","width","height","muted","controls","poster","src","Projects","map","index","toString","toolsLogos","reactLogo","reduxLogo","vueJsLogo","nodeJsLogo","javaScriptES6Logo","typeScriptLogo","sassLogo","cypressLogo","bootstrapLogo","bulmaLogo","mongoDBLogo","cloudinaryLogo","npmLogo","gitHubLogo","gitLabLogo","visualStudioCodeLogo","webstormLogo","TechStack","logo","alt","RequestIO","create","callbackFunction","unwrap","then","catch","err","message","this","ContactLink","ContactForm","handleSubmitRequest","onSubmit","event","type","placeholder","cols","rows","disabled","formNoValidate","ErrorMessageOutput","printErrorMessage","Contact","history","useHistory","faEnvelopeSquare","faMobileAlt","faPen","includes","email","subject","value","preventDefault","push","PageNotFound","ErrorModal","divElementRef","useRef","handleCloseModal","ref","current","handleClickOutside","withRouter","exact","path","component","store","configureStore","reducer","en","translations","link","about","techStack","resume","contact","startApp","gitHubClient","gitHubServer","getBack","button","submit","proceed","texts","home","welcome","personalDetails","paragraph1","paragraph2","paragraph3","paragraph4","experience","jobname","phone","form","inputEmail","inputSubject","inputMessage","pageNotFound","footer","copyright","appAuthor","errorModal","errorTexts","emailMissing","subjectMissing","messageMissing","emailFormatInvalid","createRequestFailed","general","i18n","use","initReactI18next","init","resources","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.65d6a826.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport config from \"../config\";\r\nimport axios from \"axios\";\r\nimport { MenuItem, Request } from \"../typeDefinitions\";\r\n\r\ntype ErrorMessage = string | null;\r\n\r\ninterface InitialState {\r\n  menuItem: MenuItem;\r\n  isDesktop: boolean;\r\n  isMenuVisible: boolean;\r\n  isOpenMenu: boolean;\r\n  isCloseMenu: boolean;\r\n  isCreatingRequest: boolean;\r\n  errorMessage: ErrorMessage;\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  menuItem: null,\r\n  isDesktop: false,\r\n  isMenuVisible: false,\r\n  isOpenMenu: false,\r\n  isCloseMenu: false,\r\n  isCreatingRequest: false,\r\n  errorMessage: null,\r\n};\r\n\r\nconst apiPath = `${config.API_URL}/api`;\r\n\r\nconst rejectWithValue = (data: string): void | PromiseLike<void> => {\r\n  throw new Error(data);\r\n};\r\n\r\nexport const createRequest = createAsyncThunk(\r\n  \"creativeGallery/createRequest\",\r\n  async (newRequest: Request): Promise<void | any> => {\r\n    try {\r\n      await axios.post(`${apiPath}/request/create`, newRequest);\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response.data.errorMessage);\r\n    }\r\n  }\r\n);\r\n\r\nexport const creativeGallerySlice = createSlice({\r\n  name: \"creativeGallery\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // ----- Menu -----\r\n    setIsDesktop: (state, action: PayloadAction<boolean>) => {\r\n      state.isDesktop = action.payload;\r\n    },\r\n    setIsMenuVisible: (state, action: PayloadAction<boolean>) => {\r\n      state.isMenuVisible = action.payload;\r\n    },\r\n    setIsOpenMenu: (state, action: PayloadAction<boolean>) => {\r\n      state.isOpenMenu = action.payload;\r\n    },\r\n    setIsCloseMenu: (state, action: PayloadAction<boolean>) => {\r\n      state.isCloseMenu = action.payload;\r\n    },\r\n    setMenuItem: (state, action: PayloadAction<string>) => {\r\n      state.menuItem = action.payload;\r\n    },\r\n\r\n    // ----- Request -----\r\n    setIsCreatingRequest: (state, action: PayloadAction<boolean>) => {\r\n      state.isCreatingRequest = action.payload;\r\n    },\r\n\r\n    // ----- Error handling -----\r\n    setErrorMessage: (state, action: PayloadAction<ErrorMessage>) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    // ----- Request -----\r\n    builder.addCase(createRequest.fulfilled, (state) => {\r\n      state.isCreatingRequest = false;\r\n    });\r\n    builder.addCase(createRequest.rejected, (state) => {\r\n      state.isCreatingRequest = false;\r\n    });\r\n  },\r\n});\r\n\r\n// ----- Slice actions -----\r\nexport const {\r\n  // ----- Menu -----\r\n  setIsDesktop,\r\n  setIsMenuVisible,\r\n  setIsOpenMenu,\r\n  setIsCloseMenu,\r\n  setMenuItem,\r\n\r\n  // ----- Request -----\r\n  setIsCreatingRequest,\r\n\r\n  // ----- Error handling -----\r\n  setErrorMessage,\r\n} = creativeGallerySlice.actions;\r\n\r\nexport default creativeGallerySlice.reducer;\r\n","export default { API_URL: process.env.REACT_APP_SERVER_URL };\r\n","const NavbarLogo = (): JSX.Element => {\r\n  return (\r\n    <div className=\"logo-subcontainer\">\r\n      <div className=\"logo-letter-c-outline\">\r\n        <div className=\"logo-letter-c-inline\" />\r\n      </div>\r\n      <div className=\"logo-letter-g-outline\">\r\n        <div className=\"logo-letter-g-inline\">\r\n          <div className=\"logo-letter-g-box\">\r\n            <div className=\"logo-letter-g-box2\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarLogo;\r\n","// Jungle Swap\r\nexport const jungleSwapVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-13-45-637566759460450173.mp4\";\r\nexport const jungleSwapDeployedPath: string =\r\n  \"https://jungleswap.herokuapp.com/\";\r\nexport const jungleSwapGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/jungle-swap-client\";\r\nexport const jungleSwapGitHubServerPath: string =\r\n  \"https://github.com/christiangerbig/jungle-swap-server\";\r\n\r\n// Tracker Tools\r\nexport const trackerToolsVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-13-35-637566753722531829.mp4\";\r\nexport const trackerToolsDeployedPath: string =\r\n  \"https://trackertools.herokuapp.com/\";\r\nexport const trackerToolsGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/Trackertools\";\r\n\r\n// Letter Shooter\r\nexport const letterShooterVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-14-10-637566774755686276.mp4\";\r\nexport const letterShooterDeployedPath: string =\r\n  \"https://christiangerbig.github.io/letter-shooter/\";\r\nexport const letterShooterGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/letter-shooter\";\r\n\r\n// Resume\r\nexport const resumePath: string =\r\n  \"https://www.dropbox.com/s/x3m4bop3tn2pxjm/CV-Gerbig.pdf?dl=0\";\r\n\r\n// LinkedIn\r\nexport const linkedInPath: string =\r\n  \"https://www.linkedin.com/in/christian-gerbig/\";\r\n\r\n// GitHub\r\nexport const gitHubPath: string = \"https://github.com/christiangerbig/\";\r\n","import { MouseEventHandler } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype ExternalLinkProps = {\r\n  linkPath: string;\r\n  linkClass: string;\r\n  linkText?: string;\r\n  faClass?: string;\r\n  onClickHandler?: MouseEventHandler<HTMLAnchorElement>;\r\n};\r\n\r\nconst ExternalLink = ({\r\n  linkPath,\r\n  linkClass,\r\n  linkText,\r\n  faClass,\r\n  onClickHandler,\r\n}: ExternalLinkProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{ pathname: linkPath }}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        className={linkClass}\r\n        onClick={onClickHandler}\r\n      >\r\n        {linkText ? (\r\n          linkText\r\n        ) : faClass ? (\r\n          <i className={`fab ${faClass} is-white`} />\r\n        ) : null}\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExternalLink;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport { setMenuItem } from \"../reducer/creativeGallerySlice\";\r\nimport { RootState } from \"../store\";\r\nimport { resumePath } from \"../lib/externalLinkPaths\";\r\nimport { MenuItem } from \"../typeDefinitions\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nconst NavDesktopViewItems = (): JSX.Element => {\r\n  const menuItem = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.menuItem\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const activateLink = (\r\n    currentMenuItem: MenuItem,\r\n    menuItem: MenuItem\r\n  ): string => {\r\n    return currentMenuItem === menuItem\r\n      ? \"navigation-link is-navigation-link-active\"\r\n      : \"navigation-link\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigation-container\">\r\n      <ul className=\"navigation-subcontainer-left navigation-list\">\r\n        <li>\r\n          <Link\r\n            to={\"/about\"}\r\n            className={activateLink(menuItem, \"about\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"about\"));\r\n            }}\r\n          >\r\n            {t(\"link.about\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/projects\"}\r\n            className={activateLink(menuItem, \"projects\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"projects\"));\r\n            }}\r\n          >\r\n            {t(\"link.projects\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/techstack\"}\r\n            className={activateLink(menuItem, \"techStack\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"techStack\"));\r\n            }}\r\n          >\r\n            {t(\"link.techStack\")}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"navigation-subcontainer-right navigation-list\">\r\n        <li>\r\n          <ExternalLink\r\n            linkPath={resumePath}\r\n            linkClass=\"navigation-link\"\r\n            linkText={t(\"link.resume\")}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/contact\"}\r\n            className={activateLink(menuItem, \"contact\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"contact\"));\r\n            }}\r\n          >\r\n            {t(\"link.contact\")}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavDesktopViewItems;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport {\r\n  setIsDesktop,\r\n  setIsMenuVisible,\r\n  setMenuItem,\r\n  setIsOpenMenu,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { RootState } from \"../store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavbarLogo from \"./NavbarLogo\";\r\nimport NavDesktopViewItems from \"./NavDesktopViewItems\";\r\n\r\nconst NavBar = (): JSX.Element => {\r\n  const isDesktop = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isDesktop\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const handleCheckWindowWidth = (windowObject: Window): void => {\r\n      if (windowObject.innerWidth > 1024) {\r\n        dispatch(setIsDesktop(true));\r\n      } else {\r\n        dispatch(setIsDesktop(false));\r\n      }\r\n    };\r\n\r\n    const addWindowWidthHandler = (\r\n      windowObject: Window,\r\n      eventHandler: Function\r\n    ): EventListener => {\r\n      eventHandler(windowObject);\r\n      const eventHandlerCallback = (): void => {\r\n        eventHandler(windowObject);\r\n      };\r\n\r\n      windowObject.addEventListener(\"resize\", eventHandlerCallback);\r\n      return eventHandlerCallback;\r\n    };\r\n\r\n    const handleCheckWindowWidthCallback = addWindowWidthHandler(\r\n      window,\r\n      handleCheckWindowWidth\r\n    );\r\n\r\n    return () => {\r\n      const removeWindowWidthHandler = (\r\n        windowObject: Window,\r\n        eventHandlerCallback: EventListener\r\n      ) => {\r\n        windowObject.removeEventListener(\"resize\", eventHandlerCallback);\r\n      };\r\n\r\n      removeWindowWidthHandler(window, handleCheckWindowWidthCallback);\r\n    };\r\n  }, []);\r\n\r\n  const handleOpenMenu = (): void => {\r\n    dispatch(setIsMenuVisible(true));\r\n    dispatch(setIsOpenMenu(true));\r\n    setTimeout(() => {\r\n      dispatch(setIsOpenMenu(false));\r\n    }, 1000); // 1 second\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"navbar-container navbar-border\">\r\n          <div className=\"logo-container\">\r\n            <Link\r\n              to={\"/\"}\r\n              className=\"is-text-style-plain is-white\"\r\n              onClick={() => {\r\n                dispatch(setMenuItem(\"home\"));\r\n              }}\r\n            >\r\n              <NavbarLogo />\r\n            </Link>\r\n          </div>\r\n          {isDesktop ? (\r\n            <NavDesktopViewItems />\r\n          ) : (\r\n            <div>\r\n              <FontAwesomeIcon icon={faBars} onClick={handleOpenMenu} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport {\r\n  setIsMenuVisible,\r\n  setIsCloseMenu,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { RootState } from \"../store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { resumePath } from \"../lib/externalLinkPaths\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nconst Menu = (): JSX.Element => {\r\n  const isDesktop = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isDesktop\r\n  );\r\n  const isMenuVisible = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isMenuVisible\r\n  );\r\n  const isOpenMenu = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isOpenMenu\r\n  );\r\n  const isCloseMenu = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isCloseMenu\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const handleCloseMenu = (): void => {\r\n    const resetMenuVariables = (): void => {\r\n      dispatch(setIsCloseMenu(false));\r\n      dispatch(setIsMenuVisible(false));\r\n    };\r\n\r\n    dispatch(setIsCloseMenu(true));\r\n    setTimeout(resetMenuVariables, 300); // 300 milliseconds\r\n  };\r\n\r\n  const menuProperties = (isOpenMenu: boolean): string => {\r\n    return isOpenMenu\r\n      ? \"menu fade-menu-in\"\r\n      : isCloseMenu\r\n      ? \"menu fade-menu-out\"\r\n      : \"menu\";\r\n  };\r\n\r\n  const linkProperties = (\r\n    isOpenMenu: boolean,\r\n    fadeInSpeed: string,\r\n    fadeOutSpeed: string\r\n  ): string => {\r\n    return isOpenMenu\r\n      ? `menu-link is-warning ${fadeInSpeed}`\r\n      : isCloseMenu\r\n      ? `menu-link is-warning ${fadeOutSpeed}`\r\n      : \"menu-link is-warning\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isDesktop && isMenuVisible && (\r\n        <div className={menuProperties(isOpenMenu)}>\r\n          <div className=\"close-menu-container\">\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              className=\"close-menu is-white\"\r\n              onClick={handleCloseMenu}\r\n            />\r\n          </div>\r\n          <div className=\"menu-container\">\r\n            <div className=\"menu-subcontainer\">\r\n              <ul className=\"navigation-list\">\r\n                <li>\r\n                  <Link\r\n                    to={\"/about\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menu-link-fade-in-speed1\",\r\n                      \"menu-link-fade-out-speed1\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    {t(\"link.about\")}\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={\"/projects\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menu-link-fade-in-speed2\",\r\n                      \"menu-link-fade-out-speed2\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    {t(\"link.projects\")}\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={\"/techstack\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menu-link-fade-in-speed3\",\r\n                      \"menu-link-fade-out-speed3\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    {t(\"link.techStack\")}\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <ExternalLink\r\n                    linkPath={resumePath}\r\n                    linkClass={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menu-link-fade-in-speed4\",\r\n                      \"menu-link-fade-out-speed4\"\r\n                    )}\r\n                    linkText={t(\"link.resume\")}\r\n                    onClickHandler={handleCloseMenu}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={\"/contact\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menu-link-fade-in-speed5\",\r\n                      \"menu-link-fade-out-speed5\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    {t(\"link.contact\")}\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { gitHubPath, linkedInPath } from \"../lib/externalLinkPaths\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nconst Footer = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const currentTime = new Date();\r\n  const year = currentTime.getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <div className=\"footer-container\">\r\n          <span className=\"copyright-text\">\r\n            {\" \"}\r\n            {t(\"texts.footer.copyright\")} {year} {t(\"texts.footer.appAuthor\")}{\" \"}\r\n          </span>\r\n          <ul className=\"footer-subcontainer navigation-list\">\r\n            <li>\r\n              <ExternalLink\r\n                linkPath={linkedInPath}\r\n                linkClass=\"footer-link\"\r\n                faClass=\"fa-linkedin\"\r\n              />\r\n            </li>\r\n            <li>\r\n              <ExternalLink\r\n                linkPath={gitHubPath}\r\n                linkClass=\"footer-link\"\r\n                faClass=\"fa-github\"\r\n              />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const Logo = (): JSX.Element => {\r\n  return (\r\n    <div className=\"blur-in\">\r\n      <div className=\"home-logo-subcontainer\">\r\n        <div className=\"home-logo-letter-c-outline\">\r\n          <div className=\"home-logo-letter-c-inline\"></div>\r\n        </div>\r\n        <div className=\"home-logo-letter-g-outline\">\r\n          <div className=\"home-logo-letter-g-inline\">\r\n            <div className=\"home-logo-letter-g-box\">\r\n              <div className=\"home-logo-letter-g-box2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","type Headlines = {\r\n  headline: string;\r\n  subheadline: string;\r\n};\r\n\r\ntype HeaderTextProps = {\r\n  headlines: Headlines;\r\n  borderColorName: string;\r\n};\r\n\r\nconst HeaderText = ({\r\n  headlines,\r\n  borderColorName,\r\n}: HeaderTextProps): JSX.Element => {\r\n  const { headline, subheadline } = headlines;\r\n\r\n  const borderColor = (borderColorName: string): string => {\r\n    switch (borderColorName) {\r\n      case \"green\":\r\n        return \"header-text is-border-green\";\r\n      case \"orange\":\r\n        return \"header-text is-border-orange\";\r\n      case \"violet\":\r\n        return \"header-text is-border-violet\";\r\n      case \"blue\":\r\n        return \"header-text is-border-blue\";\r\n      default:\r\n        return \"header-text\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={borderColor(borderColorName)}>\r\n      <h1 className=\"is-text-large-size\"> {headline} </h1>\r\n      <h2 className=\"is-text-small-size\"> {subheadline} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderText;\r\n","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Logo from \"../components/Logo\";\r\nimport HeaderText from \"../components/HeaderText\";\r\n\r\nconst Home = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page-container\">\r\n      <Logo />\r\n      <HeaderText\r\n        headlines={{\r\n          headline: t(\"texts.home.welcome.headline\"),\r\n          subheadline: t(\"texts.home.welcome.subheadline\"),\r\n        }}\r\n        borderColorName={\"\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch } from \"../hooks\";\r\nimport { setMenuItem } from \"../reducer/creativeGallerySlice\";\r\nimport HeaderText from \"../components/HeaderText\";\r\n\r\nconst About = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"about-page-container\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.about.headline\"),\r\n            subheadline: t(\"texts.about.subheadline\"),\r\n          }}\r\n          borderColorName={\"green\"}\r\n        />\r\n      </header>\r\n      <div className=\"about-text-container\">\r\n        <div className=\"about-text-colum-container\">\r\n          <article>\r\n            <header>\r\n              <h3>{t(\"texts.about.personalDetails.headline\")}</h3>\r\n            </header>\r\n            <p>{t(\"texts.about.personalDetails.paragraph1\")}</p>\r\n            <p>{t(\"texts.about.personalDetails.paragraph2\")}</p>\r\n            <p>{t(\"texts.about.personalDetails.paragraph3\")}</p>\r\n            <p>{t(\"texts.about.personalDetails.paragraph4\")}</p>\r\n          </article>\r\n        </div>\r\n        <div className=\"about-text-colum-container\">\r\n          <article>\r\n            <header>\r\n              <h3>{t(\"texts.about.experience.headline\")}</h3>\r\n            </header>\r\n            <p>{t(\"texts.about.experience.paragraph1\")}</p>\r\n            <p>{t(\"texts.about.experience.paragraph2\")}</p>\r\n            <p>{t(\"texts.about.experience.paragraph3\")}</p>\r\n            <p>{t(\"texts.about.experience.paragraph4\")}</p>\r\n            <p>\r\n              <span\r\n                className=\"about-contact-link\"\r\n                onClick={() => dispatch(setMenuItem(\"contact\"))}\r\n              >\r\n                <Link to={{ pathname: \"/contact\" }}>\r\n                  {t(\"texts.about.experience.contact\")}\r\n                </Link>\r\n              </span>\r\n            </p>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import jungleSwapImage from \"../images/jungle-swap.png\";\r\nimport trackerToolsImage from \"../images/trackertools.png\";\r\nimport letterShooterImage from \"../images/letter-shooter.png\";\r\nimport {\r\n  jungleSwapDeployedPath,\r\n  jungleSwapGitHubClientPath,\r\n  jungleSwapGitHubServerPath,\r\n  jungleSwapVideoPath,\r\n  letterShooterDeployedPath,\r\n  letterShooterGitHubClientPath,\r\n  letterShooterVideoPath,\r\n  trackerToolsDeployedPath,\r\n  trackerToolsGitHubClientPath,\r\n  trackerToolsVideoPath,\r\n} from \"../lib/externalLinkPaths\";\r\nimport { ProjectItem } from \"../typeDefinitions\";\r\n\r\nconst projects: ProjectItem[] = [\r\n  {\r\n    projectName: \"JUNGLE SWAP\",\r\n    projectPicturePath: jungleSwapImage,\r\n    projectVideoPath: jungleSwapVideoPath,\r\n    projectDescription:\r\n      \"Share your plant offshoots and make money or swap them for another plant. Shop and give a plant a new home.\",\r\n    deployedPath: jungleSwapDeployedPath,\r\n    gitHubClientPath: jungleSwapGitHubClientPath,\r\n    gitHubServerPath: jungleSwapGitHubServerPath,\r\n  },\r\n  {\r\n    projectName: \"TRACKERTOOLS\",\r\n    projectPicturePath: trackerToolsImage,\r\n    projectVideoPath: trackerToolsVideoPath,\r\n    projectDescription:\r\n      \"Four powerful tools to make working with the music editor Protracker and its modules more comfortable.\",\r\n    deployedPath: trackerToolsDeployedPath,\r\n    gitHubClientPath: trackerToolsGitHubClientPath,\r\n    gitHubServerPath: \"\",\r\n  },\r\n  {\r\n    projectName: \"LETTER SHOOTER\",\r\n    projectPicturePath: letterShooterImage,\r\n    projectVideoPath: letterShooterVideoPath,\r\n    projectDescription:\r\n      \"A coordination and strategy game with the goal to hit the missing letters with precise shots.\",\r\n    deployedPath: letterShooterDeployedPath,\r\n    gitHubClientPath: letterShooterGitHubClientPath,\r\n    gitHubServerPath: \"\",\r\n  },\r\n];\r\n\r\nexport default projects;\r\n","export default __webpack_public_path__ + \"static/media/jungle-swap.04645ba1.png\";","export default __webpack_public_path__ + \"static/media/trackertools.cdf33462.png\";","export default __webpack_public_path__ + \"static/media/letter-shooter.a0667b69.png\";","import { useTranslation } from \"react-i18next\";\r\nimport { ProjectItem } from \"../typeDefinitions\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\ntype ProjectDetailsProps = {\r\n  projectItem: ProjectItem;\r\n};\r\n\r\nconst ProjectDetails = ({ projectItem }: ProjectDetailsProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    projectName,\r\n    projectPicturePath,\r\n    projectVideoPath,\r\n    projectDescription,\r\n    deployedPath,\r\n    gitHubClientPath,\r\n    gitHubServerPath,\r\n  } = projectItem;\r\n\r\n  return (\r\n    <div className=\"project-details-container\">\r\n      <video\r\n        width=\"320\"\r\n        height=\"200\"\r\n        muted\r\n        controls\r\n        poster={projectPicturePath}\r\n        src={projectVideoPath}\r\n      />\r\n      <div className=\"project-description\">\r\n        <article>\r\n          <header>\r\n            <h2>{projectName}</h2>\r\n          </header>\r\n          <div className=\"project-description-container\">\r\n            <p>{projectDescription}</p>\r\n          </div>\r\n        </article>\r\n      </div>\r\n      <div className=\"project-links-container\">\r\n        <div>\r\n          <ExternalLink\r\n            linkPath={deployedPath}\r\n            linkClass=\"project-try-it-link\"\r\n            linkText={t(\"link.startApp\")}\r\n          />\r\n        </div>\r\n        <div>\r\n          <ExternalLink\r\n            linkPath={gitHubClientPath}\r\n            linkClass=\"project-github-link\"\r\n            linkText={t(\"link.gitHubClient\")}\r\n          />\r\n        </div>\r\n        {gitHubServerPath && (\r\n          <div>\r\n            <ExternalLink\r\n              linkPath={gitHubServerPath}\r\n              linkClass=\"project-github-link\"\r\n              linkText={t(\"link.gitHubServer\")}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport projects from \"../lib/projectsTable\";\r\nimport { ProjectItem } from \"../typeDefinitions\";\r\nimport HeaderText from \"../components/HeaderText\";\r\nimport ProjectDetails from \"../components/ProjectDetails\";\r\n\r\nconst Projects = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"projects-page-container\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.projects.headline\"),\r\n            subheadline: t(\"texts.projects.subheadline\"),\r\n          }}\r\n          borderColorName={\"orange\"}\r\n        />\r\n      </header>\r\n      <div className=\"projects-container\">\r\n        {projects.map(\r\n          (projectItem: ProjectItem, index: number): JSX.Element => {\r\n            return (\r\n              <ProjectDetails\r\n                projectItem={projectItem}\r\n                key={`${projectItem.projectName}${index.toString()}`}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/Bootstrap-Logo.527d0fc0.svg\";","export default __webpack_public_path__ + \"static/media/Bulma-Logo.ecefb4da.svg\";","export default __webpack_public_path__ + \"static/media/Cloudinary-Logo.df0c0e93.svg\";","export default __webpack_public_path__ + \"static/media/Cypress-Logo.071c7e70.svg\";","export default __webpack_public_path__ + \"static/media/GitHub-Logo.11619ac0.svg\";","export default __webpack_public_path__ + \"static/media/GitLab-Logo.83df9efb.svg\";","export default __webpack_public_path__ + \"static/media/JavaScript(ES6)-Logo.a309520a.svg\";","export default __webpack_public_path__ + \"static/media/MongoDB-Logo.153b7b44.svg\";","export default __webpack_public_path__ + \"static/media/NodeJS-Logo.5a3a9ca2.svg\";","export default __webpack_public_path__ + \"static/media/NPM-Logo.5620a716.svg\";","export default __webpack_public_path__ + \"static/media/React-Logo.ae626225.svg\";","export default __webpack_public_path__ + \"static/media/Redux-Logo.a9567540.svg\";","export default __webpack_public_path__ + \"static/media/Sass-Logo.8351205a.svg\";","export default __webpack_public_path__ + \"static/media/TypeScript-Logo.17d5e87e.svg\";","export default __webpack_public_path__ + \"static/media/Visual-Studio-Code-Logo.f57bbf46.svg\";","export default __webpack_public_path__ + \"static/media/Vue.js-Logo.4921ee76.svg\";","export default __webpack_public_path__ + \"static/media/Webstorm-Logo.6cac5400.svg\";","import bootstrapLogo from \"../images/Bootstrap-Logo.svg\";\r\nimport bulmaLogo from \"../images/Bulma-Logo.svg\";\r\nimport cloudinaryLogo from \"../images/Cloudinary-Logo.svg\";\r\nimport cypressLogo from \"../images/Cypress-Logo.svg\";\r\nimport gitHubLogo from \"../images/GitHub-Logo.svg\";\r\nimport gitLabLogo from \"../images/GitLab-Logo.svg\";\r\nimport javaScriptES6Logo from \"../images/JavaScript(ES6)-Logo.svg\";\r\nimport mongoDBLogo from \"../images/MongoDB-Logo.svg\";\r\nimport nodeJsLogo from \"../images/NodeJS-Logo.svg\";\r\nimport npmLogo from \"../images/NPM-Logo.svg\";\r\nimport reactLogo from \"../images/React-Logo.svg\";\r\nimport reduxLogo from \"../images/Redux-Logo.svg\";\r\nimport sassLogo from \"../images/Sass-Logo.svg\";\r\nimport typeScriptLogo from \"../images/TypeScript-Logo.svg\";\r\nimport visualStudioCodeLogo from \"../images/Visual-Studio-Code-Logo.svg\";\r\nimport vueJsLogo from \"../images/Vue.js-Logo.svg\";\r\nimport webstormLogo from \"../images/Webstorm-Logo.svg\";\r\nimport yarnLogo from \"../images/Yarn-Logo.svg\";\r\n\r\nconst toolsLogos: string[] = [\r\n    reactLogo,\r\n    reduxLogo,\r\n    vueJsLogo,\r\n    nodeJsLogo,\r\n    javaScriptES6Logo,\r\n    typeScriptLogo,\r\n    sassLogo,\r\n    cypressLogo,\r\n    bootstrapLogo,\r\n    bulmaLogo,\r\n    mongoDBLogo,\r\n    cloudinaryLogo,\r\n    npmLogo,\r\n    yarnLogo,\r\n    gitHubLogo,\r\n    gitLabLogo,\r\n    visualStudioCodeLogo,\r\n    webstormLogo\r\n  ];\r\n\r\nexport default toolsLogos;","export default __webpack_public_path__ + \"static/media/Yarn-Logo.20176999.svg\";","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HeaderText from \"../components/HeaderText\";\r\nimport toolsLogos from \"../lib/toolsLogos\";\r\n\r\nconst TechStack = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tech-stack-page-container\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.techStack.headline\"),\r\n            subheadline: t(\"texts.techStack.subheadline\"),\r\n          }}\r\n          borderColorName={\"violet\"}\r\n        />\r\n      </header>\r\n      <div className=\"tech-stack-logos-container\">\r\n        {toolsLogos.map((logo: string, index: number): JSX.Element => {\r\n          return (\r\n            <div className=\"tech-stack-logo\">\r\n              <img\r\n                src={logo}\r\n                alt=\"firm logo\"\r\n                key={`${logo}${index.toString()}`}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechStack;\r\n","import {\r\n  createRequest,\r\n  setErrorMessage,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { Request } from \"../typeDefinitions\";\r\n\r\nexport class RequestIO {\r\n  dispatch: any;\r\n  constructor(dispatch: any) {\r\n    this.dispatch = dispatch;\r\n  }\r\n\r\n  create = (newRequest: Request, callbackFunction: Function): void => {\r\n    this.dispatch(createRequest(newRequest))\r\n      .unwrap()\r\n      .then((): void => {\r\n        callbackFunction();\r\n      })\r\n      .catch((err: any): void => {\r\n        this.dispatch(setErrorMessage(err.message));\r\n      });\r\n  };\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\ntype ContactLinkProps = {\r\n  linkPath: string;\r\n  linkClass: string;\r\n  linkText: string;\r\n};\r\n\r\nconst ContactLink = ({\r\n  linkPath,\r\n  linkClass,\r\n  linkText,\r\n}: ContactLinkProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <span className={linkClass}>\r\n        <Link to={{ pathname: linkPath }} target=\"_blank\">\r\n          <h4>{linkText}</h4>\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactLink;\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\ntype ContactFormProps = {\r\n  isCreatingRequest: boolean;\r\n  handleSubmitRequest: Function;\r\n};\r\n\r\nconst ContactForm = ({\r\n  isCreatingRequest,\r\n  handleSubmitRequest,\r\n}: ContactFormProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  const buttonState = (): boolean => {\r\n    return isCreatingRequest ? true : false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(event: React.FormEvent<HTMLFormElement>) => {\r\n          handleSubmitRequest(event);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"email\"\r\n          name={t(\"texts.contact.createRequest.form.inputEmail\")}\r\n          placeholder=\"email\"\r\n          className=\"form-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name={t(\"texts.contact.createRequest.form.inputSubject\")}\r\n          placeholder=\"subject\"\r\n          className=\"form-input\"\r\n        />\r\n        <textarea\r\n          name=\"message\"\r\n          placeholder={t(\"texts.contact.createRequest.form.inputMessage\")}\r\n          cols={35}\r\n          rows={7}\r\n          className=\"form-textarea\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={buttonState()}\r\n          formNoValidate\r\n          className=\"form-submit\"\r\n        >\r\n          {t(\"button.submit\")}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { useAppSelector } from \"../hooks\";\r\nimport { RootState } from \"../store\";\r\n\r\ntype ErrorMessageOutputProps = {\r\n  printErrorMessage: Function;\r\n};\r\n\r\nconst ErrorMessageOutput = ({\r\n  printErrorMessage,\r\n}: ErrorMessageOutputProps): JSX.Element => {\r\n  const errorMessage = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.errorMessage\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"error-output is-danger\">\r\n        {printErrorMessage(errorMessage)}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessageOutput;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport { setMenuItem, setErrorMessage } from \"../reducer/creativeGallerySlice\";\r\nimport { Request } from \"../typeDefinitions\";\r\nimport { RootState } from \"../store\";\r\nimport { RequestIO } from \"../lib/requestIO\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelopeSquare,\r\n  faMobileAlt,\r\n  faPen,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport HeaderText from \"../components/HeaderText\";\r\nimport ContactLink from \"../components/ContactLink\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport ErrorMessageOutput from \"../components/ErrorMessageOutput\";\r\n\r\nconst Contact = (): JSX.Element => {\r\n  const isCreatingRequest = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isCreatingRequest\r\n  );\r\n  const errorMessage = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.errorMessage\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const setErrorMessageAndScrollToTop = (): void => {\r\n      dispatch(setErrorMessage(null));\r\n      scroll.scrollToTop();\r\n    };\r\n\r\n    setErrorMessageAndScrollToTop();\r\n  }, []);\r\n\r\n  const handleSubmitRequest = (\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): void => {\r\n    const { email, subject, message } = event.target as any;\r\n    const newRequest: Request = {\r\n      email: email.value,\r\n      subject: subject.value,\r\n      message: message.value,\r\n    };\r\n    event.preventDefault();\r\n    const requestIO = new RequestIO(dispatch);\r\n    requestIO.create(newRequest, (): void => {\r\n      dispatch(setMenuItem(\"home\"));\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  const printErrorMessage = (errorMessage: string): string => {\r\n    switch (errorMessage) {\r\n      case \"Form: Email missing\":\r\n        return t(\"errorTexts.createRequest.form.emailMissing\");\r\n      case \"Form: Subject missing\":\r\n        return t(\"errorTexts.createRequest.form.subjectMissing\");\r\n      case \"Form: Message missing\":\r\n        return t(\"errorTexts.createRequest.form.messageMissing\");\r\n      case \"Form: Email format invalid\":\r\n        return t(\"errorTexts.createRequest.form.emailFormatInvalid\");\r\n      default:\r\n        return t(\"errorTexts.general\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-page-container\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.contact.headline\"),\r\n            subheadline: t(\"texts.contact.subheadline\"),\r\n          }}\r\n          borderColorName={\"blue\"}\r\n        />\r\n      </header>\r\n      <div className=\"contact-container\">\r\n        <h1>{t(\"texts.contact.name\")}</h1>\r\n        <h2>{t(\"texts.contact.jobname\")}</h2>\r\n        <div className=\"contact-ways-container\">\r\n          <div className=\"contact-email-container\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faEnvelopeSquare} />{\" \"}\r\n              {t(\"texts.contact.email\")}\r\n            </h3>\r\n            <ContactLink\r\n              linkPath=\"mailto:chr_gerbig@web.de\"\r\n              linkClass=\"contact-link\"\r\n              linkText=\"chr_gerbig(at)web.de\"\r\n            />\r\n          </div>\r\n          <div className=\"contact-phone-container\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faMobileAlt} /> {t(\"texts.contact.phone\")}\r\n            </h3>\r\n            <ContactLink\r\n              linkPath=\"tel:+4915154824288\"\r\n              linkClass=\"contact-link\"\r\n              linkText=\"+49&nbsp;151&nbsp;548&nbsp;242&nbsp;88\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>\r\n            <FontAwesomeIcon icon={faPen} /> {t(\"texts.contact.submit\")}\r\n          </h3>\r\n        </div>\r\n        {errorMessage && errorMessage.includes(\"Form\") && (\r\n          <ErrorMessageOutput printErrorMessage={printErrorMessage} />\r\n        )}\r\n        <ContactForm\r\n          isCreatingRequest={isCreatingRequest}\r\n          handleSubmitRequest={handleSubmitRequest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HeaderText from \"../components/HeaderText\";\r\n\r\nconst PageNotFound = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"page-not-found-container\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.pageNotFound.headline\"),\r\n            subheadline: t(\"texts.pageNotFound.subheadline\"),\r\n          }}\r\n          borderColorName={\"orange\"}\r\n        />\r\n      </header>\r\n      <div className=\"page-not-found-get-back-container\">\r\n        <Link to={\"/\"} className=\"page-not-found-get-back-link\">\r\n          {t(\"link.getBack\")}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch } from \"../hooks\";\r\nimport { setErrorMessage } from \"../reducer/creativeGallerySlice\";\r\n\r\ntype ErrorModalProps = {\r\n  errorMessage: string;\r\n};\r\n\r\nconst ErrorModal = ({ errorMessage }: ErrorModalProps): JSX.Element => {\r\n  const divElementRef = useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const handleCloseModal = (): void => {\r\n    dispatch(setErrorMessage(null));\r\n  };\r\n\r\n  const handleClickOutside = (event: any): void => {\r\n    if (divElementRef.current === event.target) {\r\n      handleCloseModal();\r\n    }\r\n  };\r\n\r\n  const printErrorMessage = (errorMessage: string): string => {\r\n    switch (errorMessage) {\r\n      case \"Create request failed\":\r\n        return t(\"errorTexts.createRequest.createRequestFailed\");\r\n      default:\r\n        return t(\"errors.general\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={divElementRef}\r\n      className=\"error-modal fade-error-modal-in\"\r\n      onClick={(event) => {\r\n        handleClickOutside(event);\r\n      }}\r\n    >\r\n      <div className=\"error-modal-box\">\r\n        <h1>{t(\"errorModal.headline\")}</h1>\r\n        <h2>{printErrorMessage(errorMessage)}</h2>\r\n        <button\r\n          className=\"error-modal-button mt-4 mb-3\"\r\n          onClick={handleCloseModal}\r\n        >\r\n          {t(\"button.proceed\")}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { useAppSelector } from \"./hooks\";\r\nimport { RootState } from \"./store\";\r\nimport \"./App.min.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Menu from \"./components/Menu\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./views/Home\";\r\nimport About from \"./views/About\";\r\nimport Projects from \"./views/Projects\";\r\nimport TechStack from \"./views/TechStack\";\r\nimport Contact from \"./views/Contact\";\r\nimport PageNotFound from \"./views/PageNotFound\";\r\nimport ErrorModal from \"./components/ErrorModal\";\r\n\r\nconst App = (): JSX.Element => {\r\n  const errorMessage = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.errorMessage\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Menu />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/techstack\">\r\n          <TechStack />\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact />\r\n        </Route>\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n      <Footer />\r\n      {errorMessage && !errorMessage.includes(\"Form\") && (\r\n        <ErrorModal errorMessage={errorMessage} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport creativeGallerySlice from \"./reducer/creativeGallerySlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: { creativeGallery: creativeGallerySlice },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","const en = {\r\n  translations: {\r\n    link: {\r\n      about: \"ABOUT\",\r\n      projects: \"PROJECTS\",\r\n      techStack: \"TECHSTACK\",\r\n      resume: \"RESUME\",\r\n      contact: \"CONTACT\",\r\n      startApp: \"TRY IT\",\r\n      gitHubClient: \"GIT HUB\",\r\n      gitHubServer: \"GIT HUB 2\",\r\n      getBack: \"GET BACK\",\r\n    },\r\n\r\n    button: {\r\n      submit: \"SUBMIT\",\r\n      proceed: \"PROCEED\",\r\n    },\r\n\r\n    texts: {\r\n      home: {\r\n        welcome: {\r\n          headline: \"Hi, I'm Christian\",\r\n          subheadline: \"A passionate Web Developer\",\r\n        },\r\n      },\r\n      about: {\r\n        headline: \"There is only one way\",\r\n        subheadline: \"Straight forward\",\r\n        personalDetails: {\r\n          headline: \"Hi,\",\r\n          paragraph1:\r\n            \"I'm Christian Gerbig. I'm a Web Developer focused on Frontend and Backend technologies. My homebase is Hamburg in Germany.\",\r\n          paragraph2:\r\n            \"I believe in the positive power of communication with a trust in cooperative team working making an asset from sharing different points of views.\",\r\n          paragraph3:\r\n            \"I like to use every aspect of new technology available to reach the goals and love to code optimized solutions suiting individual requirements with respect to time, budget and target.\",\r\n          paragraph4:\r\n            \"My motto: Learning things, improving (them) and reach the goals.\",\r\n        },\r\n        experience: {\r\n          headline: \"How it began\",\r\n          paragraph1:\r\n            \"I started to learn the fundamentals of Web Development by myself and as a Full Stack Web Developper at Ironhack.\",\r\n          paragraph2:\r\n            \"I improved my skills to write Clean Code and learned in several Udemy courses to apply the Redux Toolkit and TypeScript together with React in my projects.\",\r\n          paragraph3:\r\n            \"Meanwhile I dived more into agile work as a trainee developer and learned to use Vue together with Vuex and wrote end-2-end tests for Cypress.\",\r\n          paragraph4:\r\n            \"I would like to become part of a team where I can apply, develop and share my skills.\",\r\n          contact: \"Let's get in touch.\",\r\n        },\r\n      },\r\n      projects: {\r\n        headline: \"My Web Developer projects\",\r\n        subheadline: \"I was working on\",\r\n      },\r\n      techStack: {\r\n        headline: \"The tech stack\",\r\n        subheadline: \"I use\",\r\n      },\r\n      contact: {\r\n        headline: \"Don't hesitate\",\r\n        subheadline: \"to contact me\",\r\n        name: \"Christian Gerbig\",\r\n        jobname: \"Web Developer\",\r\n        email: \"e-mail\",\r\n        phone: \"phone\",\r\n        submit: \"or write me\",\r\n        createRequest: {\r\n          form: {\r\n            inputEmail: \"email\",\r\n            inputSubject: \"subject\",\r\n            inputMessage: \"message\",\r\n          },\r\n        },\r\n      },\r\n      pageNotFound: {\r\n        headline: \"ERROR 404\",\r\n        subheadline: \"Page not found\",\r\n      },\r\n      footer: {\r\n        copyright: \"©\",\r\n        appAuthor: \"Christian Gerbig\",\r\n      },\r\n      errorModal: {\r\n        headline: \"SOMETHING WENT WRONG\",\r\n      },\r\n    },\r\n\r\n    errorTexts: {\r\n      createRequest: {\r\n        form: {\r\n          emailMissing: \"Please enter an email\",\r\n          subjectMissing: \"Please enter a subject\",\r\n          messageMissing: \"Please enter a message\",\r\n          emailFormatInvalid: \"The email format is invalid\",\r\n        },\r\n        createRequestFailed: \"Creating the request failed\",\r\n      },\r\n      general: \"An error occured\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default en;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./locales/en\";\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    en: en,\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: false,\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n});\r\n\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport \"./index.css\";\r\nimport \"./i18n\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}