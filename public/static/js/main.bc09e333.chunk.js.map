{"version":3,"sources":["hooks.ts","reducer/creativeGallerySlice.ts","config.ts","components/NavbarLogo.tsx","lib/externalLinkPaths.ts","components/ExternalLink.tsx","components/NavDesktopViewItems.tsx","components/NavBar.tsx","components/Menu.tsx","components/Footer.tsx","components/Logo.tsx","components/HeaderText.tsx","views/Home.tsx","views/About.tsx","lib/projectsTable.ts","images/jungle-swap.png","images/trackertools.png","images/letter-shooter.png","components/ProjectDetails.tsx","views/Projects.tsx","images/Bootstrap-Logo.svg","images/Bulma-Logo.svg","images/Cloudinary-Logo.svg","images/Cypress-Logo.svg","images/GitHub-Logo.svg","images/GitLab-Logo.svg","images/JavaScript(ES6)-Logo.svg","images/MongoDB-Logo.svg","images/NodeJS-Logo.svg","images/NPM-Logo.svg","images/React-Logo.svg","images/Redux-Logo.svg","images/Sass-Logo.svg","images/TypeScript-Logo.svg","images/Visual-Studio-Code-Logo.svg","images/Vue.js-Logo.svg","images/Webstorm-Logo.svg","lib/toolsLogos.ts","images/Yarn-Logo.svg","views/TechStack.tsx","components/ContactLink.tsx","components/ContactForm.tsx","views/Contact.tsx","views/NotFound.tsx","App.tsx","store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","apiPath","process","rejectWithValue","data","Error","createRequest","createAsyncThunk","a","request","axios","post","response","errorMessage","creativeGallerySlice","createSlice","name","initialState","menuItem","isDesktop","isMenuVisible","isOpenMenu","isCloseMenu","isCreatingRequest","reducers","setIsDesktop","state","action","payload","setIsMenuVisible","setIsOpenMenu","setIsCloseMenu","setMenuItem","setIsCreatingRequest","setErrorMessage","extraReducers","builder","addCase","fulfilled","rejected","actions","NavbarLogo","className","resumePath","ExternalLink","linkPath","linkClass","linkText","faClass","onClickHandler","to","pathname","target","rel","onClick","NavDesktopViewItems","creativeGallery","dispatch","activateLink","currentMenuItem","NavBar","useEffect","handleCheckWindowWidthCallback","windowObject","eventHandler","eventHandlerCallback","addEventListener","addWindowWidthHandler","window","innerWidth","removeEventListener","icon","faBars","setTimeout","Menu","handleCloseMenu","linkProperties","fadeInSpeed","fadeOutSpeed","menuProperties","faTimes","Footer","year","Date","getFullYear","Logo","HeaderText","text","borderColorName","borderColor","Home","scroll","scrollToTop","About","projects","projectName","projectPicturePath","projectVideoPath","projectDescription","deployedPath","gitHubClientPath","gitHubServerPath","ProjectDetails","projectItem","descriptionContainerRef","useRef","current","innerHTML","width","height","muted","controls","poster","src","ref","hidden","Projects","map","index","toolsLogos","reactLogo","reduxLogo","vueJsLogo","nodeJsLogo","javaScriptES6Logo","typeScriptLogo","sassLogo","cypressLogo","bootstrapLogo","bulmaLogo","mongoDBLogo","cloudinaryLogo","npmLogo","gitHubLogo","gitLabLogo","visualStudioCodeLogo","webstormLogo","TechStack","logo","alt","ContactLink","ContactForm","handleSubmitRequest","onSubmit","event","type","placeholder","cols","rows","value","disabled","formNoValidate","Contact","history","useHistory","faEnvelopeSquare","faMobileAlt","faPen","preventDefault","email","subject","message","unwrap","then","push","catch","err","NotFound","withRouter","exact","path","component","store","configureStore","reducer","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"6PAGaA,EAAiB,kBAAMC,eACvBC,EAAkDC,I,kDC2BzDC,EAAO,UC/BaC,wCD+Bb,QAEPC,EAAkB,SAACC,GACvB,MAAM,IAAIC,MAAMD,IAGLE,EAAgBC,YAC3B,gCAD2C,uCAE3C,6BAAAC,EAAA,6DAASC,EAAT,EAASA,QAAT,kBAEUC,IAAMC,KAAN,UAAcV,EAAd,mBAAwCQ,GAFlD,+EAIWN,EAAgB,KAAIS,SAASR,KAAKS,eAJ7C,wDAF2C,uDAWhCC,EAAuBC,YAAY,CAC9CC,KAAM,kBACNC,aA7BiC,CACjCC,SAAU,KACVC,WAAW,EACXC,eAAe,EACfC,YAAY,EACZC,aAAa,EACbC,mBAAmB,EACnBV,aAAc,MAwBdW,SAAU,CAERC,aAAc,SAACC,EAAOC,GACpBD,EAAMP,UAAYQ,EAAOC,SAE3BC,iBAAkB,SAACH,EAAOC,GACxBD,EAAMN,cAAgBO,EAAOC,SAE/BE,cAAe,SAACJ,EAAOC,GACrBD,EAAML,WAAaM,EAAOC,SAE5BG,eAAgB,SAACL,EAAOC,GACtBD,EAAMJ,YAAcK,EAAOC,SAE7BI,YAAa,SAACN,EAAOC,GACnBD,EAAMR,SAAWS,EAAOC,SAI1BK,qBAAsB,SAACP,EAAOC,GAC5BD,EAAMH,kBAAoBI,EAAOC,SAInCM,gBAAiB,SAACR,EAAOC,GACvBD,EAAMb,aAAec,EAAOC,UAIhCO,cAAe,SAACC,GAEdA,EAAQC,QAAQ/B,EAAcgC,WAAW,SAACZ,GACxCA,EAAMH,mBAAoB,KAE5Ba,EAAQC,QAAQ/B,EAAciC,UAAU,SAACb,GACvCA,EAAMH,mBAAoB,Q,EAmB5BT,EAAqB0B,QAXvBf,E,EAAAA,aACAI,E,EAAAA,iBACAC,E,EAAAA,cACAC,E,EAAAA,eACAC,E,EAAAA,YAMAE,G,EAHAD,qB,EAGAC,iBAGapB,IAAf,Q,uBE3Fe2B,EAjBI,WACjB,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,wBAEjB,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,kBAAf,yBCkBCC,EACX,+DCSaC,EA1BM,SAAC,GAMiB,IALrCC,EAKoC,EALpCA,SACAC,EAIoC,EAJpCA,UACAC,EAGoC,EAHpCA,SACAC,EAEoC,EAFpCA,QACAC,EACoC,EADpCA,eAEA,OACE,mCACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAUN,GAChBO,OAAO,SACPC,IAAI,sBACJX,UAAWI,EACXQ,QAASL,EALX,SAOGF,IAEGC,EACF,mBAAGN,UAAS,cAASM,EAAT,qBACV,WCqDGO,EA5Ea,WAC1B,IAAMrC,EAAWnB,GACf,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBtC,YAExCuC,EAAW5D,IAEX6D,EAAe,SACnBC,EACAzC,GAEA,OAAOyC,IAAoBzC,EACvB,wCACA,kBAGN,OACE,sBAAKwB,UAAU,sBAAf,UACE,qBAAIA,UAAU,6BAAd,UACE,6BACE,cAAC,IAAD,CACEQ,GAAI,SACJR,UAAWgB,EAAaxC,EAAU,SAClCoC,QAAS,WACPG,EAASzB,EAAY,WAJzB,qBAUF,6BACE,cAAC,IAAD,CACEkB,GAAI,YACJR,UAAWgB,EAAaxC,EAAU,YAClCoC,QAAS,WACPG,EAASzB,EAAY,cAJzB,wBAUF,6BACE,cAAC,IAAD,CACEkB,GAAI,aACJR,UAAWgB,EAAaxC,EAAU,aAClCoC,QAAS,WACPG,EAASzB,EAAY,eAJzB,4BAWJ,qBAAIU,UAAU,8BAAd,UACE,6BACE,cAAC,EAAD,CACEG,SAAUF,EACVG,UAAU,iBACVC,SAAS,aAGb,6BACE,cAAC,IAAD,CACEG,GAAI,WACJR,UAAWgB,EAAaxC,EAAU,WAClCoC,QAAS,WACPG,EAASzB,EAAY,aAJzB,8BC2BK4B,EAjFA,WACb,IAAMzC,EAAYpB,GAChB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBrC,aAExCsC,EAAW5D,IAEjBgE,qBAAU,WACR,IAqBMC,EAbwB,SAC5BC,EACAC,GAEAA,EAAaD,GACb,IAAME,EAAuB,WAC3BD,EAAaD,IAIf,OADAA,EAAaG,iBAAiB,SAAUD,GACjCA,EAG8BE,CACrCC,QAtB6B,SAACL,GAC1BA,EAAaM,WAAa,KAC5BZ,EAAShC,GAAa,IAEtBgC,EAAShC,GAAa,OAsB1B,OAAO,WACL,IACEsC,EACAE,EADAF,EAMuBK,OALvBH,EAK+BH,EAH/BC,EAAaO,oBAAoB,SAAUL,MAK9C,IAUH,OACE,8BACE,8BACE,sBAAKvB,UAAU,+BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CACEQ,GAAI,IACJR,UAAU,4BACVY,QAAS,WACPG,EAASzB,EAAY,UAJzB,SAOE,cAAC,EAAD,QAGHb,EACC,cAAC,EAAD,IAEA,8BACE,cAAC,IAAD,CAAiBoD,KAAMC,IAAQlB,QA3BpB,WACrBG,EAAS5B,GAAiB,IAC1B4B,EAAS3B,GAAc,IACvB2C,YAAW,WACThB,EAAS3B,GAAc,MACtB,kBC+EQ4C,EApIF,WACX,IAAMvD,EAAYpB,GAChB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBrC,aAExCC,EAAgBrB,GACpB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBpC,iBAExCC,EAAatB,GACjB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBnC,cAExCC,EAAcvB,GAClB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBlC,eAExCmC,EAAW5D,IAEX8E,EAAkB,WAMtBlB,EAAS1B,GAAe,IACxB0C,YAN2B,WACzBhB,EAAS1B,GAAe,IACxB0B,EAAS5B,GAAiB,MAIG,MAW3B+C,EAAiB,SACrBvD,EACAwD,EACAC,GAEA,OAAOzD,EAAU,+BACWwD,GACxBvD,EAAW,+BACawD,GACxB,wBAGN,OACE,oCACI3D,GAAaC,GACb,sBAAKsB,UAvBY,SAACrB,GACtB,OAAOA,EACH,kBACAC,EACA,mBACA,OAkBgByD,CAAe1D,GAA/B,UACE,qBAAKqB,UAAU,qBAAf,SACE,cAAC,IAAD,CACE6B,KAAMS,IACNtC,UAAU,uBACVY,QAASqB,MAGb,qBAAKjC,UAAU,gBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,+BACE,6BACE,cAAC,IAAD,CACEQ,GAAI,SACJR,UAAWkC,EACTvD,EACA,uBACA,yBAEFiC,QAASqB,EAPX,qBAYF,6BACE,cAAC,IAAD,CACEzB,GAAI,YACJR,UAAWkC,EACTvD,EACA,uBACA,yBAEFiC,QAASqB,EAPX,wBAYF,6BACE,cAAC,IAAD,CACEzB,GAAI,aACJR,UAAWkC,EACTvD,EACA,uBACA,yBAEFiC,QAASqB,EAPX,yBAYF,6BACE,cAAC,EAAD,CACE9B,SAAUF,EACVG,UAAW8B,EACTvD,EACA,uBACA,yBAEF0B,SAAS,SACTE,eAAgB0B,MAGpB,6BACE,cAAC,IAAD,CACEzB,GAAI,WACJR,UAAWkC,EACTvD,EACA,uBACA,yBAEFiC,QAASqB,EAPX,oCCzFHM,EA/BA,WACb,IACIC,GADgB,IAAIC,MACDC,cAEvB,OACE,8BACE,iCACE,sBAAK1C,UAAU,kBAAf,UACE,uBAAMA,UAAU,gBAAhB,mBAAoCwC,EAApC,wBACA,qBAAIxC,UAAU,qBAAd,UACE,6BACE,cAAC,EAAD,CACEG,SLiBd,gDKhBcC,UAAU,aACVE,QAAQ,kBAGZ,6BACE,cAAC,EAAD,CACEH,SLakB,sCKZlBC,UAAU,aACVE,QAAQ,2B,QCLTqC,EAnBF,WACX,OACE,qBAAK3C,UAAU,4BAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,qBAAKA,UAAU,4BAEjB,qBAAKA,UAAU,yBAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,oCCmBd4C,EAxBI,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,gBAgB1B,OACE,sBAAK9C,UAhBa,SAAC8C,GACnB,OAAQA,GACN,IAAK,QACH,MAAO,yBACT,IAAK,SACH,MAAO,0BACT,IAAK,SACH,MAAO,0BACT,IAAK,OACH,MAAO,wBACT,QACE,MAAO,cAKKC,CAAYD,GAA5B,UACE,qBAAI9C,UAAU,UAAd,cAA0B6C,EAAK,GAA/B,OACA,qBAAI7C,UAAU,UAAd,cAA0B6C,EAAK,GAA/B,WCHSG,EAhBF,WAKX,OAJA7B,qBAAU,WACR8B,gBAAOC,gBACN,IAGD,sBAAKlD,UAAU,oBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE6C,KAAM,CAAC,oBAAqB,8BAC5BC,gBAAiB,SC2EVK,EAnFD,WACZ,IAAMpC,EAAW5D,IAMjB,OAJAgE,qBAAU,WACR8B,gBAAOC,gBACN,IAGD,sBAAKlD,UAAU,qBAAf,UACE,wBAAQA,UAAU,WAAlB,SACE,cAAC,EAAD,CACE6C,KAAM,CAAC,wBAAyB,oBAChCC,gBAAiB,YAGrB,sBAAK9C,UAAU,gBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,oCACE,iCACE,yCAEF,2JAIA,iDAEE,uBAAMA,UAAU,cAAhB,UACG,IADH,kCAEkC,OAJpC,kBAOE,sBAAMA,UAAU,cAAhB,wCAPF,6DAUA,2HAGE,sBAAMA,UAAU,cAAhB,mCAHF,+EAMA,wGAKJ,qBAAKA,UAAU,qBAAf,SACE,oCACE,iCACE,kDAEF,uEAEE,sBAAMA,UAAU,cAAhB,+BAFF,gEAKA,wEAEE,sBAAMA,UAAU,cAAhB,0BAFF,qDAIE,sBAAMA,UAAU,cAAhB,6BAJF,OAKE,sBAAMA,UAAU,cAAhB,0BALF,iBAME,sBAAMA,UAAU,cAAhB,qBANF,mBAM+D,OAE/D,sHAIA,4BACE,sBACEA,UAAU,mBACVY,QAAS,kBAAMG,EAASzB,EAAY,aAFtC,SAIE,cAAC,IAAD,CAAMkB,GAAI,CAAEC,SAAU,YAAtB,mDCjCD2C,EA9BiB,CAC9B,CACEC,YAAa,cACbC,mBCpBW,IAA0B,wCDqBrCC,iBVnBF,uIUoBEC,mBAAmB,uHACnBC,aVnBF,oCUoBEC,iBVlBF,wDUmBEC,iBVjBF,yDUmBA,CACEN,YAAa,eACbC,mBE7BW,IAA0B,yCF8BrCC,iBVlBF,uIUmBEC,mBAAmB,kHACnBC,aVlBF,sCUmBEC,iBVjBF,kDUkBEC,iBAAkB,IAEpB,CACEN,YAAa,iBACbC,mBGtCW,IAA0B,2CHuCrCC,iBVnBF,uIUoBEC,mBAAmB,yGACnBC,aVnBF,oDUoBEC,iBVlBF,oDUmBEC,iBAAkB,KIoCPC,EAvEQ,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,YAClBC,EAA0BC,iBAAuB,MAErDV,EAOEQ,EAPFR,YACAC,EAMEO,EANFP,mBACAC,EAKEM,EALFN,iBACAC,EAIEK,EAJFL,mBACAC,EAGEI,EAHFJ,aACAC,EAEEG,EAFFH,iBACAC,EACEE,EADFF,iBAcF,OAXAxC,qBAAU,WACR,IAEE0B,IAK0CW,EAAzBM,EAHGE,QAAQC,UAAYpB,IAIzC,IAGD,sBAAK7C,UAAU,0BAAf,UACE,uBACEkE,MAAM,MACNC,OAAO,MACPC,OAAK,EACLC,UAAQ,EACRC,OAAQhB,EACRiB,IAAKhB,IAEP,qBAAKvD,UAAU,qBAAf,SACE,oCACE,iCACE,mCAAMqD,EAAN,SAEF,qBACEmB,IAAKV,EACL9D,UAAU,8BAIhB,sBAAKA,UAAU,wBAAf,UACE,8BACE,cAAC,EAAD,CACEG,SAAUsD,EACVrD,UAAU,mBACVC,SAAS,aAGb,8BACE,cAAC,EAAD,CACEF,SAAUuD,EACVtD,UAAU,oBACVC,SAAS,cAGb,qBAAKoE,QAAQd,EAAb,SACE,cAAC,EAAD,CACExD,SAAUwD,EACVvD,UAAU,oBACVC,SAAS,uBCxCNqE,EAxBE,WAKf,OAJAvD,qBAAU,WACR8B,gBAAOC,gBACN,IAGD,sBAAKlD,UAAU,wBAAf,UACE,wBAAQA,UAAU,WAAlB,SACE,cAAC,EAAD,CACE6C,KAAM,CAAC,4BAA6B,oBACpCC,gBAAiB,aAGrB,qBAAK9C,UAAU,oBAAf,SACGoD,EAASuB,KACR,SAACd,EAA0Be,GACzB,OAAO,cAAC,EAAD,CAAgBf,YAAaA,GAAkBe,YCvBnD,MAA0B,2CCA1B,MAA0B,uCCA1B,MAA0B,4CCA1B,MAA0B,yCCA1B,MAA0B,wCCA1B,MAA0B,wCCA1B,OAA0B,iDCA1B,OAA0B,yCCA1B,OAA0B,wCCA1B,OAA0B,qCCA1B,OAA0B,uCCA1B,OAA0B,uCCA1B,OAA0B,sCCA1B,OAA0B,4CCA1B,OAA0B,oDCA1B,OAA0B,wCCA1B,OAA0B,0CCwC1BC,GArBc,CACzBC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EACAC,EACAC,EACAC,GACAC,EACAC,GChCW,IAA0B,sCDkCrCC,EACAC,EACAC,GACAC,IEVWC,GAtBG,WAKhB,OAJA5E,qBAAU,WACR8B,gBAAOC,gBACN,IAGD,sBAAKlD,UAAU,yBAAf,UACE,wBAAQA,UAAU,WAAlB,SACE,cAAC,EAAD,CACE6C,KAAM,CAAC,iBAAkB,SACzBC,gBAAiB,aAGrB,qBAAK9C,UAAU,0BAAf,SACG6E,GAAWF,KAAI,SAACqB,EAAcpB,GAC7B,OAAO,qBAAKL,IAAKyB,EAAMC,IAAI,aAAiBrB,YCIvCsB,GAhBK,SAAC,GAIiB,IAHpC/F,EAGmC,EAHnCA,SACAC,EAEmC,EAFnCA,UACAC,EACmC,EADnCA,SAEA,OACE,mCACE,sBAAML,UAAWI,EAAjB,SACE,cAAC,IAAD,CAAMI,GAAI,CAAEC,SAAUN,GAAYO,OAAO,SAAzC,SACE,mCAAML,EAAN,cC8BK8F,GA1CK,SAAC,GAGiB,IAFpCtH,EAEmC,EAFnCA,kBACAuH,EACmC,EADnCA,oBAEA,OACE,mCACE,uBACEC,SAAU,SAACC,GACTF,EAAoBE,IAFxB,UAKE,uBACEC,KAAK,QACLjI,KAAK,QACLkI,YAAY,QACZxG,UAAU,cAEZ,uBACEuG,KAAK,OACLjI,KAAK,UACLkI,YAAY,UACZxG,UAAU,cAEZ,0BACE1B,KAAK,UACLkI,YAAY,UACZC,KAAM,GACNC,KAAM,EACN1G,UAAU,iBAEZ,uBACEuG,KAAK,SACLI,MAAM,SACNC,WAAU/H,EACVgI,gBAAc,EACd7G,UAAU,qBC+EL8G,GAlGC,WACd,IAAMjI,EAAoBxB,GACxB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgBjC,qBAExCV,EAAed,GACnB,SAAC2B,GAAD,OAAsBA,EAAM8B,gBAAgB3C,gBAExC4C,EAAW5D,IACX4J,EAAUC,cAEhB7F,qBAAU,WAENJ,EAASvB,EAAgB,OACzByD,gBAAOC,gBAIR,IA2BH,OACE,sBAAKlD,UAAU,uBAAf,UACE,wBAAQA,UAAU,WAAlB,SACE,cAAC,EAAD,CACE6C,KAAM,CAAC,iBAAkB,iBACzBC,gBAAiB,WAGrB,sBAAK9C,UAAU,mBAAf,UACE,oDACA,iDACA,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,+BACE,cAAC,IAAD,CAAiB6B,KAAMoF,MADzB,aAGA,cAAC,GAAD,CACE9G,SAAS,2BACTC,UAAU,cACVC,SAAS,4BAGb,sBAAKL,UAAU,wBAAf,UACE,+BACE,cAAC,IAAD,CAAiB6B,KAAMqF,MADzB,YAGA,cAAC,GAAD,CACE/G,SAAS,qBACTC,UAAU,cACVC,SAAS,yCAIf,8BACE,+BACE,cAAC,IAAD,CAAiBwB,KAAMsF,MADzB,oBAIF,oBACE1C,QAAQtG,EACR6B,UAAU,2BAFZ,UAIG,IACA7B,EAAc,OAEjB,cAAC,GAAD,CACEU,kBAAmBA,EACnBuH,oBAxEoB,SAC1BE,GAOAA,EAAMc,iBANG,MAO2Bd,EAAM5F,OAAlC2G,EAPC,EAODA,MAAOC,EAPN,EAOMA,QAASC,EAPf,EAOeA,QAClBxJ,EAAmB,CACvBsJ,MAAOA,EAAMV,MACbW,QAASA,EAAQX,MACjBY,QAASA,EAAQZ,OAEnB5F,EAASnD,EAAc,CAAEG,aACtByJ,SACAC,MAAK,WAbN1G,EAASzB,EAAY,SACrByH,EAAQW,KAAK,QAeZC,OAAM,SAACC,GACN7G,EAASvB,EAAgBoI,EAAIL,uBCxCtBM,GAlBE,WACf,OACE,sBAAK7H,UAAU,kCAAf,UACE,wBAAQA,UAAU,WAAlB,SACE,cAAC,EAAD,CACE6C,KAAM,CAAC,YAAa,kBACpBC,gBAAiB,aAGrB,qBAAK9C,UAAU,2BAAf,SACE,cAAC,IAAD,CAAMQ,GAAI,IAAKR,UAAU,oCAAzB,4BC2BO8H,gBA5BH,WACV,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOC,UAAWJ,QAEpB,cAAC,EAAD,UChCOK,GAAQC,YAAe,CAClCC,QAAS,CAAEtH,gBAAiB1C,K,MCI9BiK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINM,SAASC,cAAc,Y","file":"static/js/main.bc09e333.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport config from \"../config\";\r\nimport axios from \"axios\";\r\nimport { MenuItem, Request } from \"../typeDefinitions\";\r\n\r\ntype ErrorMessage = string | null;\r\n\r\ninterface InitialState {\r\n  menuItem: MenuItem;\r\n  isDesktop: boolean;\r\n  isMenuVisible: boolean;\r\n  isOpenMenu: boolean;\r\n  isCloseMenu: boolean;\r\n  isCreatingRequest: boolean;\r\n  errorMessage: ErrorMessage;\r\n}\r\n\r\ninterface CreateRequestParameters {\r\n  request: Request;\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  menuItem: null,\r\n  isDesktop: false,\r\n  isMenuVisible: false,\r\n  isOpenMenu: false,\r\n  isCloseMenu: false,\r\n  isCreatingRequest: false,\r\n  errorMessage: null,\r\n};\r\n\r\nconst apiPath = `${config.API_URL}/api`;\r\n\r\nconst rejectWithValue = (data: string): void | PromiseLike<void> => {\r\n  throw new Error(data);\r\n};\r\n\r\nexport const createRequest = createAsyncThunk(\r\n  \"creativeGallery/createRequest\",\r\n  async ({ request }: CreateRequestParameters): Promise<void | any> => {\r\n    try {\r\n      await axios.post(`${apiPath}/request/create`, request);\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response.data.errorMessage);\r\n    }\r\n  }\r\n);\r\n\r\nexport const creativeGallerySlice = createSlice({\r\n  name: \"creativeGallery\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // ----- Menu -----\r\n    setIsDesktop: (state, action: PayloadAction<boolean>) => {\r\n      state.isDesktop = action.payload;\r\n    },\r\n    setIsMenuVisible: (state, action: PayloadAction<boolean>) => {\r\n      state.isMenuVisible = action.payload;\r\n    },\r\n    setIsOpenMenu: (state, action: PayloadAction<boolean>) => {\r\n      state.isOpenMenu = action.payload;\r\n    },\r\n    setIsCloseMenu: (state, action: PayloadAction<boolean>) => {\r\n      state.isCloseMenu = action.payload;\r\n    },\r\n    setMenuItem: (state, action: PayloadAction<string>) => {\r\n      state.menuItem = action.payload;\r\n    },\r\n\r\n    // ----- Request -----\r\n    setIsCreatingRequest: (state, action: PayloadAction<boolean>) => {\r\n      state.isCreatingRequest = action.payload;\r\n    },\r\n\r\n    // ----- Error handling -----\r\n    setErrorMessage: (state, action: PayloadAction<ErrorMessage>) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    // ----- Request -----\r\n    builder.addCase(createRequest.fulfilled, (state) => {\r\n      state.isCreatingRequest = false;\r\n    });\r\n    builder.addCase(createRequest.rejected, (state) => {\r\n      state.isCreatingRequest = false;\r\n    });\r\n  },\r\n});\r\n\r\n// ----- Slice actions -----\r\nexport const {\r\n  // ----- Menu -----\r\n  setIsDesktop,\r\n  setIsMenuVisible,\r\n  setIsOpenMenu,\r\n  setIsCloseMenu,\r\n  setMenuItem,\r\n\r\n  // ----- Request -----\r\n  setIsCreatingRequest,\r\n\r\n  // ----- Error handling -----\r\n  setErrorMessage,\r\n} = creativeGallerySlice.actions;\r\n\r\nexport default creativeGallerySlice.reducer;\r\n","export default { API_URL: process.env.REACT_APP_SERVER_URL };\r\n","const NavbarLogo = (): JSX.Element => {\r\n  return (\r\n    <div className=\"logoSubContainer\">\r\n      <div className=\"logoLetterOutlineC\">\r\n        <div className=\"logoLetterInlineC\"></div>\r\n      </div>\r\n      <div className=\"logoLetterOutlineG\">\r\n        <div className=\"logoLetterInlineG\">\r\n          <div className=\"logoLetterBoxG\">\r\n            <div className=\"logoLetterBoxG2\"> </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarLogo;\r\n","// Jungle Swap\r\nexport const jungleSwapVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-13-45-637566759460450173.mp4\";\r\nexport const jungleSwapDeployedPath: string =\r\n  \"https://jungleswap.herokuapp.com/\";\r\nexport const jungleSwapGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/jungle-swap-client\";\r\nexport const jungleSwapGitHubServerPath: string =\r\n  \"https://github.com/christiangerbig/jungle-swap-server\";\r\n\r\n// Tracker Tools\r\nexport const trackerToolsVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-13-35-637566753722531829.mp4\";\r\nexport const trackerToolsDeployedPath: string =\r\n  \"https://trackertools.herokuapp.com/\";\r\nexport const trackerToolsGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/Trackertools\";\r\n\r\n// Letter Shooter\r\nexport const letterShooterVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-14-10-637566774755686276.mp4\";\r\nexport const letterShooterDeployedPath: string =\r\n  \"https://christiangerbig.github.io/letter-shooter/\";\r\nexport const letterShooterGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/letter-shooter\";\r\n\r\n// Resume\r\nexport const resumePath: string =\r\n  \"https://www.dropbox.com/s/x3m4bop3tn2pxjm/CV-Gerbig.pdf?dl=0\";\r\n\r\n// LinkedIn\r\nexport const linkedInPath: string =\r\n  \"https://www.linkedin.com/in/christian-gerbig/\";\r\n\r\n// GitHub\r\nexport const gitHubPath: string = \"https://github.com/christiangerbig/\";\r\n","import { MouseEventHandler } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype ExternalLinkProps = {\r\n  linkPath: string;\r\n  linkClass: string;\r\n  linkText?: string;\r\n  faClass?: string;\r\n  onClickHandler?: MouseEventHandler<HTMLAnchorElement>;\r\n};\r\n\r\nconst ExternalLink = ({\r\n  linkPath,\r\n  linkClass,\r\n  linkText,\r\n  faClass,\r\n  onClickHandler,\r\n}: ExternalLinkProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{ pathname: linkPath }}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        className={linkClass}\r\n        onClick={onClickHandler}\r\n      >\r\n        {linkText ? (\r\n          linkText\r\n        ) : faClass ? (\r\n          <i className={`fab ${faClass} textColorWhite`} />\r\n        ) : null}\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExternalLink;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport { setMenuItem } from \"../reducer/creativeGallerySlice\";\r\nimport { RootState } from \"../store\";\r\nimport { resumePath } from \"../lib/externalLinkPaths\";\r\nimport { MenuItem } from \"../typeDefinitions\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nconst NavDesktopViewItems = (): JSX.Element => {\r\n  const menuItem = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.menuItem\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const activateLink = (\r\n    currentMenuItem: MenuItem,\r\n    menuItem: MenuItem\r\n  ): string => {\r\n    return currentMenuItem === menuItem\r\n      ? \"navigationLink navigationactivateLink\"\r\n      : \"navigationLink\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigationContainer\">\r\n      <ul className=\"navigationSubContainerLeft\">\r\n        <li>\r\n          <Link\r\n            to={\"/about\"}\r\n            className={activateLink(menuItem, \"about\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"about\"));\r\n            }}\r\n          >\r\n            ABOUT\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/projects\"}\r\n            className={activateLink(menuItem, \"projects\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"projects\"));\r\n            }}\r\n          >\r\n            PROJECTS\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/techstack\"}\r\n            className={activateLink(menuItem, \"techStack\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"techStack\"));\r\n            }}\r\n          >\r\n            TECHSTACK\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"navigationSubContainerRight\">\r\n        <li>\r\n          <ExternalLink\r\n            linkPath={resumePath}\r\n            linkClass=\"navigationLink\"\r\n            linkText=\"RESUME\"\r\n          />\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/contact\"}\r\n            className={activateLink(menuItem, \"contact\")}\r\n            onClick={() => {\r\n              dispatch(setMenuItem(\"contact\"));\r\n            }}\r\n          >\r\n            CONTACT\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavDesktopViewItems;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport {\r\n  setIsDesktop,\r\n  setIsMenuVisible,\r\n  setMenuItem,\r\n  setIsOpenMenu,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { RootState } from \"../store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavbarLogo from \"./NavbarLogo\";\r\nimport NavDesktopViewItems from \"./NavDesktopViewItems\";\r\n\r\nconst NavBar = (): JSX.Element => {\r\n  const isDesktop = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isDesktop\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const handleCheckWindowWidth = (windowObject: Window): void => {\r\n      if (windowObject.innerWidth > 1024) {\r\n        dispatch(setIsDesktop(true));\r\n      } else {\r\n        dispatch(setIsDesktop(false));\r\n      }\r\n    };\r\n\r\n    const addWindowWidthHandler = (\r\n      windowObject: Window,\r\n      eventHandler: Function\r\n    ): EventListener => {\r\n      eventHandler(windowObject);\r\n      const eventHandlerCallback = (): void => {\r\n        eventHandler(windowObject);\r\n      };\r\n\r\n      windowObject.addEventListener(\"resize\", eventHandlerCallback);\r\n      return eventHandlerCallback;\r\n    };\r\n\r\n    const handleCheckWindowWidthCallback = addWindowWidthHandler(\r\n      window,\r\n      handleCheckWindowWidth\r\n    );\r\n\r\n    return () => {\r\n      const removeWindowWidthHandler = (\r\n        windowObject: Window,\r\n        eventHandlerCallback: EventListener\r\n      ) => {\r\n        windowObject.removeEventListener(\"resize\", eventHandlerCallback);\r\n      };\r\n\r\n      removeWindowWidthHandler(window, handleCheckWindowWidthCallback);\r\n    };\r\n  }, []);\r\n\r\n  const handleOpenMenu = (): void => {\r\n    dispatch(setIsMenuVisible(true));\r\n    dispatch(setIsOpenMenu(true));\r\n    setTimeout(() => {\r\n      dispatch(setIsOpenMenu(false));\r\n    }, 1000); // 1 second\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"navbarContainer navbarBorder\">\r\n          <div className=\"logoContainer\">\r\n            <Link\r\n              to={\"/\"}\r\n              className=\"textstylePlain colorWhite\"\r\n              onClick={() => {\r\n                dispatch(setMenuItem(\"home\"));\r\n              }}\r\n            >\r\n              <NavbarLogo />\r\n            </Link>\r\n          </div>\r\n          {isDesktop ? (\r\n            <NavDesktopViewItems />\r\n          ) : (\r\n            <div>\r\n              <FontAwesomeIcon icon={faBars} onClick={handleOpenMenu} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport {\r\n  setIsMenuVisible,\r\n  setIsCloseMenu,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { RootState } from \"../store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { resumePath } from \"../lib/externalLinkPaths\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nconst Menu = (): JSX.Element => {\r\n  const isDesktop = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isDesktop\r\n  );\r\n  const isMenuVisible = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isMenuVisible\r\n  );\r\n  const isOpenMenu = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isOpenMenu\r\n  );\r\n  const isCloseMenu = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isCloseMenu\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleCloseMenu = (): void => {\r\n    const resetMenuVariables = (): void => {\r\n      dispatch(setIsCloseMenu(false));\r\n      dispatch(setIsMenuVisible(false));\r\n    };\r\n\r\n    dispatch(setIsCloseMenu(true));\r\n    setTimeout(resetMenuVariables, 300); // 300 milliseconds\r\n  };\r\n\r\n  const menuProperties = (isOpenMenu: boolean): string => {\r\n    return isOpenMenu\r\n      ? \"menu fadeMenuIn\"\r\n      : isCloseMenu\r\n      ? \"menu fadeMenuOut\"\r\n      : \"menu\";\r\n  };\r\n\r\n  const linkProperties = (\r\n    isOpenMenu: boolean,\r\n    fadeInSpeed: string,\r\n    fadeOutSpeed: string\r\n  ): string => {\r\n    return isOpenMenu\r\n      ? `menuLink colorOrange ${fadeInSpeed}`\r\n      : isCloseMenu\r\n      ? `menuLink colorOrange ${fadeOutSpeed}`\r\n      : \"menuLink colorOrange\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isDesktop && isMenuVisible && (\r\n        <div className={menuProperties(isOpenMenu)}>\r\n          <div className=\"menuCloseContainer\">\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              className=\"menuClose colorWhite\"\r\n              onClick={handleCloseMenu}\r\n            />\r\n          </div>\r\n          <div className=\"menuContainer\">\r\n            <div className=\"menuSubContainer\">\r\n              <ul>\r\n                <li>\r\n                  <Link\r\n                    to={\"/about\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menuLinkFadeInSpeed1\",\r\n                      \"menuLinkFadeOutSpeed1\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    ABOUT\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={\"/projects\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menuLinkFadeInSpeed2\",\r\n                      \"menuLinkFadeOutSpeed2\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    PROJECTS\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={\"/techstack\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menuLinkFadeInSpeed3\",\r\n                      \"menuLinkFadeOutSpeed3\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    TECHSTACK\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <ExternalLink\r\n                    linkPath={resumePath}\r\n                    linkClass={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menuLinkFadeInSpeed4\",\r\n                      \"menuLinkFadeOutSpeed4\"\r\n                    )}\r\n                    linkText=\"RESUME\"\r\n                    onClickHandler={handleCloseMenu}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={\"/contact\"}\r\n                    className={linkProperties(\r\n                      isOpenMenu,\r\n                      \"menuLinkFadeInSpeed5\",\r\n                      \"menuLinkFadeOutSpeed5\"\r\n                    )}\r\n                    onClick={handleCloseMenu}\r\n                  >\r\n                    CONTACT\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { gitHubPath, linkedInPath } from \"../lib/externalLinkPaths\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nconst Footer = (): JSX.Element => {\r\n  const currentTime = new Date();\r\n  let year = currentTime.getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <div className=\"footerContainer\">\r\n          <span className=\"copyrightText\"> © {year} Christian Gerbig </span>\r\n          <ul className=\"footerSubContainer\">\r\n            <li>\r\n              <ExternalLink\r\n                linkPath={linkedInPath}\r\n                linkClass=\"footerLink\"\r\n                faClass=\"fa-linkedin\"\r\n              />\r\n            </li>\r\n            <li>\r\n              <ExternalLink\r\n                linkPath={gitHubPath}\r\n                linkClass=\"footerLink\"\r\n                faClass=\"fa-github\"\r\n              />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const Logo = (): JSX.Element => {\r\n  return (\r\n    <div className=\"homeLogoContainer blurrIn\">\r\n      <div className=\"homeLogoSubContainer\">\r\n        <div className=\"homeLogoLetterOutlineC\">\r\n          <div className=\"homeLogoLetterInlineC\"></div>\r\n        </div>\r\n        <div className=\"homeLogoLetterOutlineG\">\r\n          <div className=\"homeLogoLetterInlineG\">\r\n            <div className=\"homeLogoLetterBoxG\">\r\n              <div className=\"homeLogoLetterBoxG2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","type HeaderTextProps = {\r\n  text: string[];\r\n  borderColorName: string;\r\n};\r\n\r\nconst HeaderText = ({ text, borderColorName }: HeaderTextProps): JSX.Element => {\r\n  const borderColor = (borderColorName: string): string => {\r\n    switch (borderColorName) {\r\n      case \"green\":\r\n        return \"headerText greenBorder\";\r\n      case \"orange\":\r\n        return \"headerText orangeBorder\";\r\n      case \"violet\":\r\n        return \"headerText violetBorder\";\r\n      case \"blue\":\r\n        return \"headerText blueBorder\";\r\n      default:\r\n        return \"headerText\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={borderColor(borderColorName)}>\r\n      <h1 className=\"textFat\"> {text[0]} </h1>\r\n      <h2 className=\"textBig\"> {text[1]} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderText;\r\n","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport Logo from \"../components/Logo\";\r\nimport HeaderText from \"../components/HeaderText\";\r\n\r\nconst Home = (): JSX.Element => {\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homePageContainer\">\r\n      <Logo />\r\n      <HeaderText\r\n        text={[\"Hi, I'm Christian\", \"A passionate Web Developer\"]}\r\n        borderColorName={\"\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useAppDispatch } from \"../hooks\";\r\nimport { setMenuItem } from \"../reducer/creativeGallerySlice\";\r\nimport HeaderText from \"../components/HeaderText\";\r\n\r\nconst About = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"aboutPageContainer\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          text={[\"There is only one way\", \"Straight forward\"]}\r\n          borderColorName={\"green\"}\r\n        />\r\n      </header>\r\n      <div className=\"textContainer\">\r\n        <div className=\"textColumContainer\">\r\n          <article>\r\n            <header>\r\n              <h3> Hi, </h3>\r\n            </header>\r\n            <p>\r\n              I'm Christian Gerbig. I'm a Web Developer focused on Frontend and\r\n              Backend technologies. My homebase is Hamburg in Germany.\r\n            </p>\r\n            <p>\r\n              I believe in the\r\n              <span className=\"colorOrange\">\r\n                {\" \"}\r\n                positive power of communication{\" \"}\r\n              </span>\r\n              with a trust in\r\n              <span className=\"colorOrange\"> cooperative team working </span>\r\n              making an asset from sharing different points of views.\r\n            </p>\r\n            <p>\r\n              I like to use every aspect of new technology available to reach\r\n              the goals and love to code\r\n              <span className=\"colorOrange\"> optimized solutions </span> suiting\r\n              individual requirements with respect to time, budget and target.\r\n            </p>\r\n            <p>\r\n              My motto: \"Learning things, improving (them) and reach the goals\".\r\n            </p>\r\n          </article>\r\n        </div>\r\n        <div className=\"textColumContainer\">\r\n          <article>\r\n            <header>\r\n              <h3> How it began </h3>\r\n            </header>\r\n            <p>\r\n              I started to learn the fundamentals of\r\n              <span className=\"colorOrange\"> Web Development </span> by myself\r\n              and as a Full Stack Web Developper at Ironhack.\r\n            </p>\r\n            <p>\r\n              Meanwhile I improved my skills to write\r\n              <span className=\"colorOrange\"> Clean Code </span> and learned in\r\n              several Udemy courses to apply the\r\n              <span className=\"colorOrange\"> Redux Toolkit </span> and\r\n              <span className=\"colorOrange\"> TypeScript </span> together with\r\n              <span className=\"colorOrange\"> React </span> in my projects.{\" \"}\r\n            </p>\r\n            <p>\r\n              I would like to become part of a team where I can apply, develop\r\n              and share my skills.\r\n            </p>\r\n            <p>\r\n              <span\r\n                className=\"aboutContactLink\"\r\n                onClick={() => dispatch(setMenuItem(\"contact\"))}\r\n              >\r\n                <Link to={{ pathname: \"/contact\" }}> Let's get in touch. </Link>\r\n              </span>\r\n            </p>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import jungleSwapImage from \"../images/jungle-swap.png\";\r\nimport trackerToolsImage from \"../images/trackertools.png\";\r\nimport letterShooterImage from \"../images/letter-shooter.png\";\r\nimport {\r\n  jungleSwapDeployedPath,\r\n  jungleSwapGitHubClientPath,\r\n  jungleSwapGitHubServerPath,\r\n  jungleSwapVideoPath,\r\n  letterShooterDeployedPath,\r\n  letterShooterGitHubClientPath,\r\n  letterShooterVideoPath,\r\n  trackerToolsDeployedPath,\r\n  trackerToolsGitHubClientPath,\r\n  trackerToolsVideoPath,\r\n} from \"../lib/externalLinkPaths\";\r\nimport { ProjectItem } from \"../typeDefinitions\";\r\n\r\nconst projects: ProjectItem[] = [\r\n  {\r\n    projectName: \"JUNGLE SWAP\",\r\n    projectPicturePath: jungleSwapImage,\r\n    projectVideoPath: jungleSwapVideoPath,\r\n    projectDescription: `<p> Share your plant offshoots and make money or swap them for another plant. Shop and give a plant a new home. </p>`,\r\n    deployedPath: jungleSwapDeployedPath,\r\n    gitHubClientPath: jungleSwapGitHubClientPath,\r\n    gitHubServerPath: jungleSwapGitHubServerPath,\r\n  },\r\n  {\r\n    projectName: \"TRACKERTOOLS\",\r\n    projectPicturePath: trackerToolsImage,\r\n    projectVideoPath: trackerToolsVideoPath,\r\n    projectDescription: `<p> Four powerful tools to make working with the music editor Protracker and its modules more comfortable. </p>`,\r\n    deployedPath: trackerToolsDeployedPath,\r\n    gitHubClientPath: trackerToolsGitHubClientPath,\r\n    gitHubServerPath: \"\",\r\n  },\r\n  {\r\n    projectName: \"LETTER SHOOTER\",\r\n    projectPicturePath: letterShooterImage,\r\n    projectVideoPath: letterShooterVideoPath,\r\n    projectDescription: `<p> A coordination and strategy game with the goal to hit the missing letters with precise shots. </p>`,\r\n    deployedPath: letterShooterDeployedPath,\r\n    gitHubClientPath: letterShooterGitHubClientPath,\r\n    gitHubServerPath: \"\",\r\n  },\r\n];\r\n\r\nexport default projects;\r\n","export default __webpack_public_path__ + \"static/media/jungle-swap.04645ba1.png\";","export default __webpack_public_path__ + \"static/media/trackertools.cdf33462.png\";","export default __webpack_public_path__ + \"static/media/letter-shooter.a0667b69.png\";","import { RefObject, useEffect, useRef } from \"react\";\r\nimport { ProjectItem } from \"../typeDefinitions\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\ntype ProjectDetailsProps = {\r\n  projectItem: ProjectItem;\r\n};\r\n\r\nconst ProjectDetails = ({ projectItem }: ProjectDetailsProps): JSX.Element => {\r\n  const descriptionContainerRef = useRef<HTMLDivElement>(null);\r\n  const {\r\n    projectName,\r\n    projectPicturePath,\r\n    projectVideoPath,\r\n    projectDescription,\r\n    deployedPath,\r\n    gitHubClientPath,\r\n    gitHubServerPath,\r\n  } = projectItem;\r\n\r\n  useEffect(() => {\r\n    const setDescriptionText = (\r\n      elementRef: RefObject<HTMLDivElement>,\r\n      text: string\r\n    ): void => {\r\n      (elementRef as any).current.innerHTML = text;\r\n    };\r\n\r\n    setDescriptionText(descriptionContainerRef, projectDescription);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"projectDetailsContainer\">\r\n      <video\r\n        width=\"320\"\r\n        height=\"200\"\r\n        muted\r\n        controls\r\n        poster={projectPicturePath}\r\n        src={projectVideoPath}\r\n      />\r\n      <div className=\"projectDescription\">\r\n        <article>\r\n          <header>\r\n            <h2> {projectName} </h2>\r\n          </header>\r\n          <div\r\n            ref={descriptionContainerRef}\r\n            className=\"descriptionContainer\"\r\n          ></div>\r\n        </article>\r\n      </div>\r\n      <div className=\"projectLinksContainer\">\r\n        <div>\r\n          <ExternalLink\r\n            linkPath={deployedPath}\r\n            linkClass=\"projectTryItLink\"\r\n            linkText=\"TRY IT\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <ExternalLink\r\n            linkPath={gitHubClientPath}\r\n            linkClass=\"projectGitHubLink\"\r\n            linkText=\"GIT HUB\"\r\n          />\r\n        </div>\r\n        <div hidden={gitHubServerPath ? false : true}>\r\n          <ExternalLink\r\n            linkPath={gitHubServerPath}\r\n            linkClass=\"projectGitHubLink\"\r\n            linkText=\"GIT HUB 2\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport projects from \"../lib/projectsTable\";\r\nimport { ProjectItem } from \"../typeDefinitions\";\r\nimport HeaderText from \"../components/HeaderText\";\r\nimport ProjectDetails from \"../components/ProjectDetails\";\r\n\r\nconst Projects = (): JSX.Element => {\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"projectsPageContainer\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          text={[\"My Web Developer projects\", \"I was working on\"]}\r\n          borderColorName={\"orange\"}\r\n        />\r\n      </header>\r\n      <div className=\"projectsContainer\">\r\n        {projects.map(\r\n          (projectItem: ProjectItem, index: number): JSX.Element => {\r\n            return <ProjectDetails projectItem={projectItem} key={index} />;\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/Bootstrap-Logo.527d0fc0.svg\";","export default __webpack_public_path__ + \"static/media/Bulma-Logo.ecefb4da.svg\";","export default __webpack_public_path__ + \"static/media/Cloudinary-Logo.df0c0e93.svg\";","export default __webpack_public_path__ + \"static/media/Cypress-Logo.071c7e70.svg\";","export default __webpack_public_path__ + \"static/media/GitHub-Logo.11619ac0.svg\";","export default __webpack_public_path__ + \"static/media/GitLab-Logo.83df9efb.svg\";","export default __webpack_public_path__ + \"static/media/JavaScript(ES6)-Logo.a309520a.svg\";","export default __webpack_public_path__ + \"static/media/MongoDB-Logo.153b7b44.svg\";","export default __webpack_public_path__ + \"static/media/NodeJS-Logo.5a3a9ca2.svg\";","export default __webpack_public_path__ + \"static/media/NPM-Logo.5620a716.svg\";","export default __webpack_public_path__ + \"static/media/React-Logo.ae626225.svg\";","export default __webpack_public_path__ + \"static/media/Redux-Logo.a9567540.svg\";","export default __webpack_public_path__ + \"static/media/Sass-Logo.8351205a.svg\";","export default __webpack_public_path__ + \"static/media/TypeScript-Logo.17d5e87e.svg\";","export default __webpack_public_path__ + \"static/media/Visual-Studio-Code-Logo.f57bbf46.svg\";","export default __webpack_public_path__ + \"static/media/Vue.js-Logo.4921ee76.svg\";","export default __webpack_public_path__ + \"static/media/Webstorm-Logo.6cac5400.svg\";","import bootstrapLogo from \"../images/Bootstrap-Logo.svg\";\r\nimport bulmaLogo from \"../images/Bulma-Logo.svg\";\r\nimport cloudinaryLogo from \"../images/Cloudinary-Logo.svg\";\r\nimport cypressLogo from \"../images/Cypress-Logo.svg\";\r\nimport gitHubLogo from \"../images/GitHub-Logo.svg\";\r\nimport gitLabLogo from \"../images/GitLab-Logo.svg\";\r\nimport javaScriptES6Logo from \"../images/JavaScript(ES6)-Logo.svg\";\r\nimport mongoDBLogo from \"../images/MongoDB-Logo.svg\";\r\nimport nodeJsLogo from \"../images/NodeJS-Logo.svg\";\r\nimport npmLogo from \"../images/NPM-Logo.svg\";\r\nimport reactLogo from \"../images/React-Logo.svg\";\r\nimport reduxLogo from \"../images/Redux-Logo.svg\";\r\nimport sassLogo from \"../images/Sass-Logo.svg\";\r\nimport typeScriptLogo from \"../images/TypeScript-Logo.svg\";\r\nimport visualStudioCodeLogo from \"../images/Visual-Studio-Code-Logo.svg\";\r\nimport vueJsLogo from \"../images/Vue.js-Logo.svg\";\r\nimport webstormLogo from \"../images/Webstorm-Logo.svg\";\r\nimport yarnLogo from \"../images/Yarn-Logo.svg\";\r\n\r\nconst toolsLogos: string[] = [\r\n    reactLogo,\r\n    reduxLogo,\r\n    vueJsLogo,\r\n    nodeJsLogo,\r\n    javaScriptES6Logo,\r\n    typeScriptLogo,\r\n    sassLogo,\r\n    cypressLogo,\r\n    bootstrapLogo,\r\n    bulmaLogo,\r\n    mongoDBLogo,\r\n    cloudinaryLogo,\r\n    npmLogo,\r\n    yarnLogo,\r\n    gitHubLogo,\r\n    gitLabLogo,\r\n    visualStudioCodeLogo,\r\n    webstormLogo\r\n  ];\r\n\r\nexport default toolsLogos;","export default __webpack_public_path__ + \"static/media/Yarn-Logo.20176999.svg\";","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport HeaderText from \"../components/HeaderText\";\r\nimport toolsLogos from \"../lib/toolsLogos\";\r\n\r\nconst TechStack = (): JSX.Element => {\r\n  useEffect(() => {\r\n    scroll.scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"techStackPageContainer\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          text={[\"The tech stack\", \"I use\"]}\r\n          borderColorName={\"violet\"}\r\n        />\r\n      </header>\r\n      <div className=\"techStackLogosContainer\">\r\n        {toolsLogos.map((logo: string, index: number): JSX.Element => {\r\n          return <img src={logo} alt=\"firm logo\" key={index} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechStack;\r\n","import { Link } from \"react-router-dom\";\r\n\r\ntype ContactLinkProps = {\r\n  linkPath: string;\r\n  linkClass: string;\r\n  linkText: string;\r\n};\r\n\r\nconst ContactLink = ({\r\n  linkPath,\r\n  linkClass,\r\n  linkText,\r\n}: ContactLinkProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <span className={linkClass}>\r\n        <Link to={{ pathname: linkPath }} target=\"_blank\">\r\n          <h4> {linkText} </h4>\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactLink;\r\n","type ContactFormProps = {\r\n  isCreatingRequest: boolean;\r\n  handleSubmitRequest: Function;\r\n};\r\n\r\nconst ContactForm = ({\r\n  isCreatingRequest,\r\n  handleSubmitRequest,\r\n}: ContactFormProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(event: React.FormEvent<HTMLFormElement>) => {\r\n          handleSubmitRequest(event);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"email\"\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"subject\"\r\n          placeholder=\"subject\"\r\n          className=\"formInput\"\r\n        />\r\n        <textarea\r\n          name=\"message\"\r\n          placeholder=\"message\"\r\n          cols={35}\r\n          rows={7}\r\n          className=\"formTextarea\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"SUBMIT\"\r\n          disabled={isCreatingRequest ? true : false}\r\n          formNoValidate\r\n          className=\"formSubmit\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\r\nimport {\r\n  createRequest,\r\n  setMenuItem,\r\n  setErrorMessage,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { Request } from \"../typeDefinitions\";\r\nimport { RootState } from \"../store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelopeSquare,\r\n  faMobileAlt,\r\n  faPen,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport HeaderText from \"../components/HeaderText\";\r\nimport ContactLink from \"../components/ContactLink\";\r\nimport ContactForm from \"../components/ContactForm\";\r\n\r\nconst Contact = (): JSX.Element => {\r\n  const isCreatingRequest = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.isCreatingRequest\r\n  );\r\n  const errorMessage = useAppSelector(\r\n    (state: RootState) => state.creativeGallery.errorMessage\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const setErrorMessageAndScrollToTop = (): void => {\r\n      dispatch(setErrorMessage(null));\r\n      scroll.scrollToTop();\r\n    };\r\n\r\n    setErrorMessageAndScrollToTop();\r\n  }, []);\r\n\r\n  const handleSubmitRequest = (\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): void => {\r\n    const setMenuItemAndReturnToHomePage = (): void => {\r\n      dispatch(setMenuItem(\"home\"));\r\n      history.push(\"/\");\r\n    };\r\n\r\n    event.preventDefault();\r\n    const { email, subject, message } = event.target as any;\r\n    const request: Request = {\r\n      email: email.value,\r\n      subject: subject.value,\r\n      message: message.value,\r\n    };\r\n    dispatch(createRequest({ request }))\r\n      .unwrap()\r\n      .then(() => {\r\n        setMenuItemAndReturnToHomePage();\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setErrorMessage(err.message));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"contactPageContainer\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          text={[\"Don't hesitate\", \"to contact me\"]}\r\n          borderColorName={\"blue\"}\r\n        />\r\n      </header>\r\n      <div className=\"contactContainer\">\r\n        <h1> Christian Gerbig </h1>\r\n        <h2> Web Developer </h2>\r\n        <div className=\"contactWaysContainer\">\r\n          <div className=\"contactEmailContainer\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faEnvelopeSquare} /> e-mail\r\n            </h3>\r\n            <ContactLink\r\n              linkPath=\"mailto:chr_gerbig@web.de\"\r\n              linkClass=\"contactLink\"\r\n              linkText=\"chr_gerbig(at)web.de\"\r\n            />\r\n          </div>\r\n          <div className=\"contactPhoneContainer\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faMobileAlt} /> phone\r\n            </h3>\r\n            <ContactLink\r\n              linkPath=\"tel:+4915154824288\"\r\n              linkClass=\"contactLink\"\r\n              linkText=\"+49&nbsp;151&nbsp;548&nbsp;242&nbsp;88\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>\r\n            <FontAwesomeIcon icon={faPen} /> or write me\r\n          </h3>\r\n        </div>\r\n        <p\r\n          hidden={errorMessage ? false : true}\r\n          className=\"errorOutput warningColor\"\r\n        >\r\n          {\" \"}\r\n          {errorMessage}{\" \"}\r\n        </p>\r\n        <ContactForm\r\n          isCreatingRequest={isCreatingRequest}\r\n          handleSubmitRequest={handleSubmitRequest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { Link } from \"react-router-dom\";\r\nimport HeaderText from \"../components/HeaderText\";\r\n\r\nconst NotFound = (): JSX.Element => {\r\n  return (\r\n    <div className=\"notFoundPageContainer logoImage\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          text={[\"Error 404\", \"Page not found\"]}\r\n          borderColorName={\"orange\"}\r\n        />\r\n      </header>\r\n      <div className=\"notFoundGetBackContainer\">\r\n        <Link to={\"/\"} className=\"notFoundGetBackLink textEnlighted\">\r\n          GET BACK\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport \"./App.min.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Menu from \"./components/Menu\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./views/Home\";\r\nimport About from \"./views/About\";\r\nimport Projects from \"./views/Projects\";\r\nimport TechStack from \"./views/TechStack\";\r\nimport Contact from \"./views/Contact\";\r\nimport NotFound from \"./views/NotFound\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Menu />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/techstack\">\r\n          <TechStack />\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact />\r\n        </Route>\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport creativeGallerySlice from \"./reducer/creativeGallerySlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: { creativeGallery: creativeGallerySlice },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}