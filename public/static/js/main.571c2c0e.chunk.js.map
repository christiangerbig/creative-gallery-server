{"version":3,"sources":["app/hooks.ts","reducer/creativeGallerySlice.ts","app/config.ts","components/navigation/NavBarLogo.tsx","lib/externalLinkPaths.ts","components/helpers/ExternalLink.tsx","components/helpers/SelectLanguage.tsx","components/navigation/NavDesktopItems.tsx","components/navigation/NavToggler.tsx","components/navigation/NavView.tsx","components/navigation/NavBar.tsx","components/navigation/NavMenu.tsx","components/Footer.tsx","components/Home/HomeLogo.tsx","components/helpers/HeaderText.tsx","views/Home.tsx","views/About.tsx","lib/projectsTable.ts","images/jungle-swap.png","images/trackertools.png","images/letter-shooter.png","components/Projects/ProjectDetails.tsx","views/Projects.tsx","images/Bootstrap-Logo.svg","images/Bulma-Logo.svg","images/Cloudinary-Logo.svg","images/Cypress-Logo.svg","images/GitHub-Logo.svg","images/GitLab-Logo.svg","images/JavaScript(ES6)-Logo.svg","images/MongoDB-Logo.svg","images/NodeJS-Logo.svg","images/NPM-Logo.svg","images/React-Logo.svg","images/Redux-Logo.svg","images/Sass-Logo.svg","images/TypeScript-Logo.svg","images/Visual-Studio-Code-Logo.svg","images/Vue.js-Logo.svg","images/Webstorm-Logo.svg","lib/toolsLogos.ts","images/Yarn-Logo.svg","views/TechStack.tsx","components/helpers/ErrorMessage.tsx","components/contact/ContactLink.tsx","components/contact/ContactForm.tsx","views/Contact.tsx","app/custom-hooks/useHandleRequest.ts","views/NotFound.tsx","components/modals/ModalBody.tsx","components/modals/ErrorModal.tsx","components/modals/OfflineModal.tsx","components/modals/Modals.tsx","app/custom-hooks/useOnlineStatus.ts","App.tsx","app/store.ts","app/i18n.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","apiPath","process","rejectWithValue","data","Error","createRequest","createAsyncThunk","newRequest","a","axios","post","response","errorMessage","creativeGallerySlice","createSlice","name","initialState","menuItem","isDesktop","isMenuVisible","isOpenMenu","isCloseMenu","isCreatingRequest","reducers","setIsDesktop","state","payload","setIsMenuVisible","setIsOpenMenu","setIsCloseMenu","setNavItem","setIsCreatingRequest","setErrorMessage","extraReducers","builder","addCase","fulfilled","rejected","selectors","creativeGallery","actions","selectMenuItem","selectIsDesktop","selectIsMenuVisible","selectIsOpenMenu","selectIsCloseMenu","selectIsCreatingRequest","selectErrorMessage","NavBarLogo","className","resumePath","ExternalLink","path","styleClass","text","faClass","closeMenuHandler","to","pathname","target","rel","onClick","linkContent","SelectLanguage","useTranslation","t","i18n","data-cy","onChange","event","value","changeLanguage","handleSelectLanguage","NavDesktopViewItems","dispatch","highliteNavItem","currentMenuItem","NavToggler","icon","faBars","setTimeout","NavView","NavDesktopItems","NavBar","useEffect","handleResizeEventCallback","window","innerWidth","addEventListener","removeEventListener","NavMenu","handleCloseMenu","fadeMenuItem","fadeInSpeed","fadeOutSpeed","faTimes","Footer","year","Date","getFullYear","HomeLogo","HeaderText","headlines","headline","subheadline","borderColorName","borderColor","Home","scrollToTop","scroll","About","projects","projectName","projectPicturePath","projectVideoPath","projectDescription","deployedPath","gitHubClientPath","gitHubServerPath","ProjectDetails","projectItem","width","height","muted","controls","poster","src","Projects","map","index","toString","toolsLogos","reactLogo","reduxLogo","vueJsLogo","nodeJsLogo","javaScriptES6Logo","typeScriptLogo","sassLogo","cypressLogo","bootstrapLogo","bulmaLogo","mongoDBLogo","cloudinaryLogo","npmLogo","gitHubLogo","gitLabLogo","visualStudioCodeLogo","webstormLogo","TechStack","logo","loading","alt","ErrorMessage","message","outputFunction","includes","ContactLink","ContactForm","handleSubmitRequest","onSubmit","type","placeholder","cols","rows","disabled","formNoValidate","Contact","push","useHistory","callbackFunction","unwrap","then","catch","err","useHandleRequest","faEnvelopeSquare","faMobileAlt","faPen","email","subject","preventDefault","NotFound","ModalBody","isClose","divElementRef","useRef","handleCloseModal","ref","current","handleClickOutside","ErrorModal","convertErrorMessage","OfflineModal","isOnline","Modals","useState","setIsOnline","handleOfflineEventCallback","handleOnlineEventCallback","useOnlineStatus","withRouter","exact","component","store","configureStore","reducer","use","Backend","initReactI18next","init","fallbackLng","ns","defaultNS","backend","loadPath","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","document","querySelector"],"mappings":"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","file":"static/js/main.571c2c0e.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport config from \"../app/config\";\r\nimport { RootState } from \"../app/store\";\r\nimport { MenuItem, Request } from \"../app/typeDefinitions\";\r\nimport axios from \"axios\";\r\n\r\ntype ErrorMessage = string | null;\r\n\r\ninterface InitialState {\r\n  menuItem: MenuItem;\r\n  isDesktop: boolean;\r\n  isMenuVisible: boolean;\r\n  isOpenMenu: boolean;\r\n  isCloseMenu: boolean;\r\n  isCreatingRequest: boolean;\r\n  errorMessage: ErrorMessage;\r\n}\r\n\r\nconst initialState: InitialState = {\r\n  menuItem: null,\r\n  isDesktop: false,\r\n  isMenuVisible: false,\r\n  isOpenMenu: false,\r\n  isCloseMenu: false,\r\n  isCreatingRequest: false,\r\n  errorMessage: null,\r\n};\r\n\r\nconst apiPath = `${config.API_URL}/api`;\r\n\r\nconst rejectWithValue = (data: string): void | PromiseLike<void> => {\r\n  throw new Error(data);\r\n};\r\n\r\nexport const createRequest = createAsyncThunk(\r\n  \"creativeGallery/createRequest\",\r\n  async (newRequest: Request): Promise<void | any> => {\r\n    try {\r\n      await axios.post(`${apiPath}/request/create`, newRequest);\r\n    } catch (err: any) {\r\n      return rejectWithValue(err.response.data.errorMessage);\r\n    }\r\n  }\r\n);\r\n\r\nexport const creativeGallerySlice = createSlice({\r\n  name: \"creativeGallery\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // ----- Menu -----\r\n    setIsDesktop: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isDesktop = payload;\r\n    },\r\n    setIsMenuVisible: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isMenuVisible = payload;\r\n    },\r\n    setIsOpenMenu: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isOpenMenu = payload;\r\n    },\r\n    setIsCloseMenu: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isCloseMenu = payload;\r\n    },\r\n    setNavItem: (state, { payload }: PayloadAction<string>) => {\r\n      state.menuItem = payload;\r\n    },\r\n\r\n    // ----- Request -----\r\n    setIsCreatingRequest: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isCreatingRequest = payload;\r\n    },\r\n\r\n    // ----- Error handling -----\r\n    setErrorMessage: (state, { payload }: PayloadAction<ErrorMessage>) => {\r\n      state.errorMessage = payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    // ----- Request -----\r\n    builder.addCase(createRequest.fulfilled, (state) => {\r\n      state.isCreatingRequest = false;\r\n    });\r\n    builder.addCase(createRequest.rejected, (state) => {\r\n      state.isCreatingRequest = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst selectors = {\r\n  // ----- Menu -----\r\n  selectMenuItem: ({ creativeGallery }: RootState) => creativeGallery.menuItem,\r\n  selectIsDesktop: ({ creativeGallery }: RootState) =>\r\n    creativeGallery.isDesktop,\r\n  selectIsMenuVisible: ({ creativeGallery }: RootState) =>\r\n    creativeGallery.isMenuVisible,\r\n  selectIsOpenMenu: ({ creativeGallery }: RootState) =>\r\n    creativeGallery.isOpenMenu,\r\n  selectIsCloseMenu: ({ creativeGallery }: RootState) =>\r\n    creativeGallery.isCloseMenu,\r\n\r\n  // ----- Request -----\r\n  selectIsCreatingRequest: ({ creativeGallery }: RootState) =>\r\n    creativeGallery.isCreatingRequest,\r\n\r\n  // ----- Error handling -----\r\n  selectErrorMessage: ({ creativeGallery }: RootState) =>\r\n    creativeGallery.errorMessage,\r\n};\r\n\r\n// ----- Slice actions -----\r\nexport const {\r\n  // ----- Menu -----\r\n  setIsDesktop,\r\n  setIsMenuVisible,\r\n  setIsOpenMenu,\r\n  setIsCloseMenu,\r\n  setNavItem,\r\n\r\n  // ----- Request -----\r\n  setIsCreatingRequest,\r\n\r\n  // ----- Error handling -----\r\n  setErrorMessage,\r\n} = creativeGallerySlice.actions;\r\n\r\n// ----- Slice selectors -----\r\nexport const {\r\n  // ----- Menu -----\r\n  selectMenuItem,\r\n  selectIsDesktop,\r\n  selectIsMenuVisible,\r\n  selectIsOpenMenu,\r\n  selectIsCloseMenu,\r\n\r\n  // ----- Request -----\r\n  selectIsCreatingRequest,\r\n\r\n  // ----- Error handling -----\r\n  selectErrorMessage,\r\n} = selectors;\r\n\r\nexport default creativeGallerySlice.reducer;\r\n","export default { API_URL: process.env.REACT_APP_SERVER_URL };\r\n","const NavBarLogo = (): JSX.Element => {\r\n  return (\r\n    <div className=\"logo-subcontainer\">\r\n      <div className=\"logo-letter-c-outline\">\r\n        <div className=\"logo-letter-c-inline\" />\r\n      </div>\r\n      <div className=\"logo-letter-g-outline\">\r\n        <div className=\"logo-letter-g-inline\">\r\n          <div className=\"logo-letter-g-box\">\r\n            <div className=\"logo-letter-g-box2\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBarLogo;\r\n","// Jungle Swap\r\nexport const jungleSwapVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-13-45-637566759460450173.mp4\";\r\nexport const jungleSwapDeployedPath: string =\r\n  \"https://jungleswap.herokuapp.com/\";\r\nexport const jungleSwapGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/jungle-swap-client\";\r\nexport const jungleSwapGitHubServerPath: string =\r\n  \"https://github.com/christiangerbig/jungle-swap-server\";\r\n\r\n// Tracker Tools\r\nexport const trackerToolsVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-13-35-637566753722531829.mp4\";\r\nexport const trackerToolsDeployedPath: string =\r\n  \"https://trackertools.herokuapp.com/\";\r\nexport const trackerToolsGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/Trackertools\";\r\n\r\n// Letter Shooter\r\nexport const letterShooterVideoPath: string =\r\n  \"https://bliskcloudstorage.blob.core.windows.net/videos/2c9bdc9d-6b6f-4823-844c-2a2cd5c36a86/15-May-2021-14-10-637566774755686276.mp4\";\r\nexport const letterShooterDeployedPath: string =\r\n  \"https://christiangerbig.github.io/letter-shooter/\";\r\nexport const letterShooterGitHubClientPath: string =\r\n  \"https://github.com/christiangerbig/letter-shooter\";\r\n\r\n// Resume\r\nexport const resumePath: string =\r\n  \"https://www.dropbox.com/s/x3m4bop3tn2pxjm/CV-Gerbig.pdf?dl=0\";\r\n\r\n// LinkedIn\r\nexport const linkedInPath: string =\r\n  \"https://www.linkedin.com/in/christian-gerbig/\";\r\n\r\n// GitHub\r\nexport const gitHubPath: string = \"https://github.com/christiangerbig/\";\r\n","import { MouseEventHandler } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype ExternalLinkProps = {\r\n  path: string;\r\n  styleClass: string;\r\n  text?: string;\r\n  faClass?: string;\r\n  closeMenuHandler?: MouseEventHandler<HTMLAnchorElement>;\r\n};\r\n\r\nconst ExternalLink = ({\r\n  path,\r\n  styleClass,\r\n  text,\r\n  faClass,\r\n  closeMenuHandler,\r\n}: ExternalLinkProps): JSX.Element => {\r\n  const linkContent = (\r\n    text: string | undefined,\r\n    faClass: string | undefined\r\n  ): string | JSX.Element => {\r\n    return text ? (\r\n      text\r\n    ) : faClass ? (\r\n      <i className={`fab ${faClass} is-white`} />\r\n    ) : (\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{ pathname: path }}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        className={styleClass}\r\n        onClick={closeMenuHandler}\r\n      >\r\n        {linkContent(text, faClass)}\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExternalLink;\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\ntype SelectLanguageProps = {\r\n  styleClass: string;\r\n  closeMenuHandler?: Function;\r\n};\r\n\r\nconst SelectLanguage = ({\r\n  styleClass,\r\n  closeMenuHandler,\r\n}: SelectLanguageProps): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const handleSelectLanguage = ({ target: { value } }: any): void => {\r\n    i18n.changeLanguage(value);\r\n    if (typeof closeMenuHandler !== \"undefined\") {\r\n      closeMenuHandler();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select\r\n        className={styleClass}\r\n        data-cy=\"menu-select-language\"\r\n        onChange={(event) => {\r\n          handleSelectLanguage(event);\r\n        }}\r\n      >\r\n        <option value=\"\">{t(\"select.language.placeholder\")}</option>\r\n        <option value=\"de\">{t(\"select.language.german\")}</option>\r\n        <option value=\"en\">{t(\"select.language.english\")}</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectLanguage;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { selectMenuItem, setNavItem } from \"../../reducer/creativeGallerySlice\";\r\nimport { resumePath } from \"../../lib/externalLinkPaths\";\r\nimport { MenuItem } from \"../../app/typeDefinitions\";\r\nimport ExternalLink from \"../helpers/ExternalLink\";\r\nimport SelectLanguage from \"../helpers/SelectLanguage\";\r\n\r\nconst NavDesktopViewItems = (): JSX.Element => {\r\n  const menuItem = useAppSelector(selectMenuItem);\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const highliteNavItem = (currentMenuItem: MenuItem): string => {\r\n    return currentMenuItem === menuItem\r\n      ? \"navigation-link is-navigation-link-active\"\r\n      : \"navigation-link\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigation-container\">\r\n      <ul className=\"navigation-subcontainer-left navigation-list\">\r\n        <li>\r\n          <Link\r\n            to={\"/about\"}\r\n            className={highliteNavItem(\"about\")}\r\n            onClick={(): void => {\r\n              dispatch(setNavItem(\"about\"));\r\n            }}\r\n          >\r\n            {t(\"link.about\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/projects\"}\r\n            className={highliteNavItem(\"projects\")}\r\n            onClick={(): void => {\r\n              dispatch(setNavItem(\"projects\"));\r\n            }}\r\n          >\r\n            {t(\"link.projects\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/techstack\"}\r\n            className={highliteNavItem(\"techStack\")}\r\n            onClick={(): void => {\r\n              dispatch(setNavItem(\"techStack\"));\r\n            }}\r\n          >\r\n            {t(\"link.techStack\")}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"navigation-subcontainer-right navigation-list\">\r\n        <li>\r\n          <ExternalLink\r\n            path={resumePath}\r\n            styleClass=\"navigation-link\"\r\n            text={t(\"link.resume\")}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\"/contact\"}\r\n            className={highliteNavItem(\"contact\")}\r\n            onClick={(): void => {\r\n              dispatch(setNavItem(\"contact\"));\r\n            }}\r\n          >\r\n            {t(\"link.contact\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <SelectLanguage styleClass={\"select-language\"} />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavDesktopViewItems;\r\n","import { useAppDispatch } from \"../../app/hooks\";\r\nimport {\r\n  setIsMenuVisible,\r\n  setIsOpenMenu,\r\n} from \"../../reducer/creativeGallerySlice\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NavToggler = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleOpenMenu = (): void => {\r\n    dispatch(setIsMenuVisible(true));\r\n    dispatch(setIsOpenMenu(true));\r\n    setTimeout((): void => {\r\n      dispatch(setIsOpenMenu(false));\r\n    }, 1000); // 1 second\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FontAwesomeIcon\r\n        icon={faBars}\r\n        data-cy=\"toggler\"\r\n        onClick={handleOpenMenu}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavToggler;\r\n","import NavDesktopItems from \"./NavDesktopItems\";\r\nimport NavToggler from \"./NavToggler\";\r\n\r\ntype NavViewProps = {\r\n  isDesktop: boolean;\r\n};\r\n\r\nconst NavView = ({ isDesktop }: NavViewProps): JSX.Element => {\r\n  if (isDesktop) {\r\n    return <NavDesktopItems />;\r\n  }\r\n  return <NavToggler />;\r\n};\r\n\r\nexport default NavView;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  selectIsDesktop,\r\n  setIsDesktop,\r\n  setNavItem,\r\n} from \"../../reducer/creativeGallerySlice\";\r\nimport NavBarLogo from \"./NavBarLogo\";\r\nimport NavView from \"./NavView\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NavBar = (): JSX.Element => {\r\n  const isDesktop = useAppSelector(selectIsDesktop);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const handleResizeEventCallback = (): void => {\r\n      if (window.innerWidth > 1024) {\r\n        dispatch(setIsDesktop(true));\r\n      } else {\r\n        dispatch(setIsDesktop(false));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResizeEventCallback);\r\n    handleResizeEventCallback();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResizeEventCallback);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"navbar-container navbar-border\">\r\n          <div className=\"logo-container\">\r\n            <Link\r\n              to={\"/\"}\r\n              className=\"is-text-style-plain is-white\"\r\n              onClick={(): void => {\r\n                dispatch(setNavItem(\"home\"));\r\n              }}\r\n            >\r\n              <NavBarLogo />\r\n            </Link>\r\n          </div>\r\n          <NavView isDesktop={isDesktop} />\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  setIsMenuVisible,\r\n  setIsCloseMenu,\r\n  selectIsDesktop,\r\n  selectIsMenuVisible,\r\n  selectIsOpenMenu,\r\n  selectIsCloseMenu,\r\n} from \"../../reducer/creativeGallerySlice\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { resumePath } from \"../../lib/externalLinkPaths\";\r\nimport ExternalLink from \"../helpers/ExternalLink\";\r\nimport SelectLanguage from \"../helpers/SelectLanguage\";\r\n\r\nconst NavMenu = (): JSX.Element | null => {\r\n  const isDesktop = useAppSelector(selectIsDesktop);\r\n  const isMenuVisible = useAppSelector(selectIsMenuVisible);\r\n  const isOpenMenu = useAppSelector(selectIsOpenMenu);\r\n  const isCloseMenu = useAppSelector(selectIsCloseMenu);\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const handleCloseMenu = (): void => {\r\n    const resetMenuVariables = (): void => {\r\n      dispatch(setIsCloseMenu(false));\r\n      dispatch(setIsMenuVisible(false));\r\n    };\r\n\r\n    dispatch(setIsCloseMenu(true));\r\n    setTimeout(resetMenuVariables, 300); // 300 milliseconds\r\n  };\r\n\r\n  const fadeMenu = (): string => {\r\n    return isOpenMenu\r\n      ? \"menu fade-menu-in\"\r\n      : isCloseMenu\r\n      ? \"menu fade-menu-out\"\r\n      : \"menu\";\r\n  };\r\n\r\n  const fadeMenuItem = (fadeInSpeed: string, fadeOutSpeed: string): string => {\r\n    return isOpenMenu\r\n      ? `menu-item is-warning ${fadeInSpeed}`\r\n      : isCloseMenu\r\n      ? `menu-item is-warning ${fadeOutSpeed}`\r\n      : \"menu-item is-warning\";\r\n  };\r\n\r\n  if (isDesktop || !isMenuVisible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={fadeMenu()}>\r\n        <div className=\"close-menu-container\">\r\n          <FontAwesomeIcon\r\n            icon={faTimes}\r\n            className=\"close-menu is-white\"\r\n            onClick={handleCloseMenu}\r\n          />\r\n        </div>\r\n        <div className=\"menu-container\">\r\n          <div className=\"menu-subcontainer\">\r\n            <ul className=\"navigation-list\">\r\n              <li>\r\n                <Link\r\n                  to={\"/about\"}\r\n                  className={fadeMenuItem(\r\n                    \"menu-item-fade-in-speed1\",\r\n                    \"menu-item-fade-out-speed1\"\r\n                  )}\r\n                  data-cy=\"menu-about-link\"\r\n                  onClick={handleCloseMenu}\r\n                >\r\n                  {t(\"link.about\")}\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to={\"/projects\"}\r\n                  className={fadeMenuItem(\r\n                    \"menu-item-fade-in-speed2\",\r\n                    \"menu-item-fade-out-speed2\"\r\n                  )}\r\n                  data-cy=\"menu-projects-link\"\r\n                  onClick={handleCloseMenu}\r\n                >\r\n                  {t(\"link.projects\")}\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to={\"/techstack\"}\r\n                  className={fadeMenuItem(\r\n                    \"menu-item-fade-in-speed3\",\r\n                    \"menu-item-fade-out-speed3\"\r\n                  )}\r\n                  data-cy=\"menu-techstack-link\"\r\n                  onClick={handleCloseMenu}\r\n                >\r\n                  {t(\"link.techStack\")}\r\n                </Link>\r\n              </li>\r\n              <li data-cy=\"menu-resume-link\">\r\n                <ExternalLink\r\n                  path={resumePath}\r\n                  styleClass={fadeMenuItem(\r\n                    \"menu-item-fade-in-speed4\",\r\n                    \"menu-item-fade-out-speed4\"\r\n                  )}\r\n                  text={t(\"link.resume\")}\r\n                  closeMenuHandler={handleCloseMenu}\r\n                />\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to={\"/contact\"}\r\n                  className={fadeMenuItem(\r\n                    \"menu-item-fade-in-speed5\",\r\n                    \"menu-item-fade-out-speed5\"\r\n                  )}\r\n                  data-cy=\"menu-contact-link\"\r\n                  onClick={handleCloseMenu}\r\n                >\r\n                  {t(\"link.contact\")}\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <SelectLanguage\r\n                  styleClass={`${fadeMenuItem(\r\n                    \"menu-item-fade-in-speed6\",\r\n                    \"menu-item-fade-out-speed6\"\r\n                  )} menu-select-language`}\r\n                  closeMenuHandler={handleCloseMenu}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { gitHubPath, linkedInPath } from \"../lib/externalLinkPaths\";\r\nimport ExternalLink from \"./helpers/ExternalLink\";\r\n\r\nconst Footer = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const currentTime = new Date();\r\n  const year = currentTime.getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <div className=\"footer-container\">\r\n          <span className=\"copyright-text\">\r\n            {\" \"}\r\n            {t(\"texts.footer.copyright\")} {year} {t(\"texts.footer.appAuthor\")}{\" \"}\r\n          </span>\r\n          <ul className=\"footer-subcontainer navigation-list\">\r\n            <li>\r\n              <ExternalLink\r\n                path={linkedInPath}\r\n                styleClass=\"footer-link\"\r\n                faClass=\"fa-linkedin\"\r\n              />\r\n            </li>\r\n            <li>\r\n              <ExternalLink\r\n                path={gitHubPath}\r\n                styleClass=\"footer-link\"\r\n                faClass=\"fa-github\"\r\n              />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const HomeLogo = (): JSX.Element => {\r\n  return (\r\n    <div className=\"blur-in\">\r\n      <div className=\"home-logo-subcontainer\">\r\n        <div className=\"home-logo-letter-c-outline\">\r\n          <div className=\"home-logo-letter-c-inline\"></div>\r\n        </div>\r\n        <div className=\"home-logo-letter-g-outline\">\r\n          <div className=\"home-logo-letter-g-inline\">\r\n            <div className=\"home-logo-letter-g-box\">\r\n              <div className=\"home-logo-letter-g-box2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeLogo;\r\n","type Headlines = {\r\n  headline: string;\r\n  subheadline: string;\r\n};\r\n\r\ntype HeaderTextProps = {\r\n  headlines: Headlines;\r\n  borderColorName: string;\r\n};\r\n\r\nconst HeaderText = ({\r\n  headlines: { headline, subheadline },\r\n  borderColorName,\r\n}: HeaderTextProps): JSX.Element => {\r\n  const borderColor = (borderColorName: string): string => {\r\n    switch (borderColorName) {\r\n      case \"green\":\r\n        return \"header-text is-border-green\";\r\n      case \"orange\":\r\n        return \"header-text is-border-orange\";\r\n      case \"violet\":\r\n        return \"header-text is-border-violet\";\r\n      case \"blue\":\r\n        return \"header-text is-border-blue\";\r\n      default:\r\n        return \"header-text\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={borderColor(borderColorName)}>\r\n      <h1 className=\"is-text-large-size\"> {headline} </h1>\r\n      <h2 className=\"is-text-small-size\"> {subheadline} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderText;\r\n","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Logo from \"../components/Home/HomeLogo\";\r\nimport HeaderText from \"../components/helpers/HeaderText\";\r\n\r\nconst Home = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const { scrollToTop } = scroll;\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page-container\">\r\n      <Logo />\r\n      <HeaderText\r\n        headlines={{\r\n          headline: t(\"texts.home.welcome.headline\"),\r\n          subheadline: t(\"texts.home.welcome.subheadline\"),\r\n        }}\r\n        borderColorName={\"\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { setNavItem } from \"../reducer/creativeGallerySlice\";\r\nimport HeaderText from \"../components/helpers/HeaderText\";\r\n\r\nconst About = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n  const { scrollToTop } = scroll;\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"about-page-container\" data-cy=\"about-page\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.about.headline\"),\r\n            subheadline: t(\"texts.about.subheadline\"),\r\n          }}\r\n          borderColorName={\"green\"}\r\n        />\r\n      </header>\r\n      <div className=\"about-text-container\">\r\n        <div className=\"about-text-colum-container\">\r\n          <article>\r\n            <header>\r\n              <h3>{t(\"texts.about.personalDetails.headline\")}</h3>\r\n            </header>\r\n            <p>{t(\"texts.about.personalDetails.paragraph1\")}</p>\r\n            <p>{t(\"texts.about.personalDetails.paragraph2\")}</p>\r\n            <p>{t(\"texts.about.personalDetails.paragraph3\")}</p>\r\n            <p>{t(\"texts.about.personalDetails.paragraph4\")}</p>\r\n          </article>\r\n        </div>\r\n        <div className=\"about-text-colum-container\">\r\n          <article>\r\n            <header>\r\n              <h3>{t(\"texts.about.experience.headline\")}</h3>\r\n            </header>\r\n            <p>{t(\"texts.about.experience.paragraph1\")}</p>\r\n            <p>{t(\"texts.about.experience.paragraph2\")}</p>\r\n            <p>{t(\"texts.about.experience.paragraph3\")}</p>\r\n            <p>{t(\"texts.about.experience.paragraph4\")}</p>\r\n            <p>\r\n              <span\r\n                className=\"about-contact-link\"\r\n                onClick={(): void => {\r\n                  dispatch(setNavItem(\"contact\"));\r\n                }}\r\n              >\r\n                <Link to={{ pathname: \"/contact\" }}>\r\n                  {t(\"texts.about.experience.contact\")}\r\n                </Link>\r\n              </span>\r\n            </p>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import jungleSwapImage from \"../images/jungle-swap.png\";\r\nimport trackerToolsImage from \"../images/trackertools.png\";\r\nimport letterShooterImage from \"../images/letter-shooter.png\";\r\nimport {\r\n  jungleSwapDeployedPath,\r\n  jungleSwapGitHubClientPath,\r\n  jungleSwapGitHubServerPath,\r\n  jungleSwapVideoPath,\r\n  letterShooterDeployedPath,\r\n  letterShooterGitHubClientPath,\r\n  letterShooterVideoPath,\r\n  trackerToolsDeployedPath,\r\n  trackerToolsGitHubClientPath,\r\n  trackerToolsVideoPath,\r\n} from \"../lib/externalLinkPaths\";\r\nimport { ProjectItem } from \"../app/typeDefinitions\";\r\n\r\nconst projects: ProjectItem[] = [\r\n  {\r\n    projectName: \"texts.projects.jungleSwap.name\",\r\n    projectPicturePath: jungleSwapImage,\r\n    projectVideoPath: jungleSwapVideoPath,\r\n    projectDescription: \"texts.projects.jungleSwap.description\",\r\n    deployedPath: jungleSwapDeployedPath,\r\n    gitHubClientPath: jungleSwapGitHubClientPath,\r\n    gitHubServerPath: jungleSwapGitHubServerPath,\r\n  },\r\n  {\r\n    projectName: \"texts.projects.trackerTools.name\",\r\n    projectPicturePath: trackerToolsImage,\r\n    projectVideoPath: trackerToolsVideoPath,\r\n    projectDescription: \"texts.projects.trackerTools.description\",\r\n    deployedPath: trackerToolsDeployedPath,\r\n    gitHubClientPath: trackerToolsGitHubClientPath,\r\n    gitHubServerPath: \"\",\r\n  },\r\n  {\r\n    projectName: \"texts.projects.letterShooter.name\",\r\n    projectPicturePath: letterShooterImage,\r\n    projectVideoPath: letterShooterVideoPath,\r\n    projectDescription: \"texts.projects.letterShooter.description\",\r\n    deployedPath: letterShooterDeployedPath,\r\n    gitHubClientPath: letterShooterGitHubClientPath,\r\n    gitHubServerPath: \"\",\r\n  },\r\n];\r\n\r\nexport default projects;\r\n","export default __webpack_public_path__ + \"static/media/jungle-swap.04645ba1.png\";","export default __webpack_public_path__ + \"static/media/trackertools.cdf33462.png\";","export default __webpack_public_path__ + \"static/media/letter-shooter.a0667b69.png\";","import { useTranslation } from \"react-i18next\";\r\nimport { ProjectItem } from \"../../app/typeDefinitions\";\r\nimport ExternalLink from \"../helpers/ExternalLink\";\r\n\r\ntype ProjectDetailsProps = {\r\n  projectItem: ProjectItem;\r\n};\r\n\r\nconst ProjectDetails = ({\r\n  projectItem: {\r\n    projectName,\r\n    projectPicturePath,\r\n    projectVideoPath,\r\n    projectDescription,\r\n    deployedPath,\r\n    gitHubClientPath,\r\n    gitHubServerPath,\r\n  },\r\n}: ProjectDetailsProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"project-details-container\">\r\n      <video\r\n        width=\"320\"\r\n        height=\"170\"\r\n        muted\r\n        controls\r\n        poster={projectPicturePath}\r\n        src={projectVideoPath}\r\n      />\r\n      <div className=\"project-description\">\r\n        <article>\r\n          <header>\r\n            <h2>{t(projectName)}</h2>\r\n          </header>\r\n          <div className=\"project-description-container\">\r\n            <p>{t(projectDescription)}</p>\r\n          </div>\r\n        </article>\r\n      </div>\r\n      <div className=\"project-links-container\">\r\n        <div>\r\n          <ExternalLink\r\n            path={deployedPath}\r\n            styleClass=\"project-try-it-link\"\r\n            text={t(\"link.startApp\")}\r\n          />\r\n        </div>\r\n        <div>\r\n          <ExternalLink\r\n            path={gitHubClientPath}\r\n            styleClass=\"project-github-link\"\r\n            text={t(\"link.gitHubClient\")}\r\n          />\r\n        </div>\r\n        {gitHubServerPath && (\r\n          <div>\r\n            <ExternalLink\r\n              path={gitHubServerPath}\r\n              styleClass=\"project-github-link\"\r\n              text={t(\"link.gitHubServer\")}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport projects from \"../lib/projectsTable\";\r\nimport { ProjectItem } from \"../app/typeDefinitions\";\r\nimport HeaderText from \"../components/helpers/HeaderText\";\r\nimport ProjectDetails from \"../components/Projects/ProjectDetails\";\r\n\r\nconst Projects = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const { scrollToTop } = scroll;\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"projects-page-container\" data-cy=\"projects-page\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.projects.headline\"),\r\n            subheadline: t(\"texts.projects.subheadline\"),\r\n          }}\r\n          borderColorName={\"orange\"}\r\n        />\r\n      </header>\r\n      <div className=\"projects-container\">\r\n        {projects.map(\r\n          (projectItem: ProjectItem, index: number): JSX.Element => {\r\n            return (\r\n              <ProjectDetails\r\n                projectItem={projectItem}\r\n                key={`${projectItem.projectName}${index.toString()}`}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/Bootstrap-Logo.527d0fc0.svg\";","export default __webpack_public_path__ + \"static/media/Bulma-Logo.ecefb4da.svg\";","export default __webpack_public_path__ + \"static/media/Cloudinary-Logo.df0c0e93.svg\";","export default __webpack_public_path__ + \"static/media/Cypress-Logo.071c7e70.svg\";","export default __webpack_public_path__ + \"static/media/GitHub-Logo.11619ac0.svg\";","export default __webpack_public_path__ + \"static/media/GitLab-Logo.83df9efb.svg\";","export default __webpack_public_path__ + \"static/media/JavaScript(ES6)-Logo.a309520a.svg\";","export default __webpack_public_path__ + \"static/media/MongoDB-Logo.153b7b44.svg\";","export default __webpack_public_path__ + \"static/media/NodeJS-Logo.5a3a9ca2.svg\";","export default __webpack_public_path__ + \"static/media/NPM-Logo.5620a716.svg\";","export default __webpack_public_path__ + \"static/media/React-Logo.ae626225.svg\";","export default __webpack_public_path__ + \"static/media/Redux-Logo.a9567540.svg\";","export default __webpack_public_path__ + \"static/media/Sass-Logo.8351205a.svg\";","export default __webpack_public_path__ + \"static/media/TypeScript-Logo.17d5e87e.svg\";","export default __webpack_public_path__ + \"static/media/Visual-Studio-Code-Logo.f57bbf46.svg\";","export default __webpack_public_path__ + \"static/media/Vue.js-Logo.4921ee76.svg\";","export default __webpack_public_path__ + \"static/media/Webstorm-Logo.6cac5400.svg\";","import bootstrapLogo from \"../images/Bootstrap-Logo.svg\";\r\nimport bulmaLogo from \"../images/Bulma-Logo.svg\";\r\nimport cloudinaryLogo from \"../images/Cloudinary-Logo.svg\";\r\nimport cypressLogo from \"../images/Cypress-Logo.svg\";\r\nimport gitHubLogo from \"../images/GitHub-Logo.svg\";\r\nimport gitLabLogo from \"../images/GitLab-Logo.svg\";\r\nimport javaScriptES6Logo from \"../images/JavaScript(ES6)-Logo.svg\";\r\nimport mongoDBLogo from \"../images/MongoDB-Logo.svg\";\r\nimport nodeJsLogo from \"../images/NodeJS-Logo.svg\";\r\nimport npmLogo from \"../images/NPM-Logo.svg\";\r\nimport reactLogo from \"../images/React-Logo.svg\";\r\nimport reduxLogo from \"../images/Redux-Logo.svg\";\r\nimport sassLogo from \"../images/Sass-Logo.svg\";\r\nimport typeScriptLogo from \"../images/TypeScript-Logo.svg\";\r\nimport visualStudioCodeLogo from \"../images/Visual-Studio-Code-Logo.svg\";\r\nimport vueJsLogo from \"../images/Vue.js-Logo.svg\";\r\nimport webstormLogo from \"../images/Webstorm-Logo.svg\";\r\nimport yarnLogo from \"../images/Yarn-Logo.svg\";\r\n\r\nconst toolsLogos: string[] = [\r\n    reactLogo,\r\n    reduxLogo,\r\n    vueJsLogo,\r\n    nodeJsLogo,\r\n    javaScriptES6Logo,\r\n    typeScriptLogo,\r\n    sassLogo,\r\n    cypressLogo,\r\n    bootstrapLogo,\r\n    bulmaLogo,\r\n    mongoDBLogo,\r\n    cloudinaryLogo,\r\n    npmLogo,\r\n    yarnLogo,\r\n    gitHubLogo,\r\n    gitLabLogo,\r\n    visualStudioCodeLogo,\r\n    webstormLogo\r\n  ];\r\n\r\nexport default toolsLogos;","export default __webpack_public_path__ + \"static/media/Yarn-Logo.20176999.svg\";","import { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HeaderText from \"../components/helpers/HeaderText\";\r\nimport toolsLogos from \"../lib/toolsLogos\";\r\n\r\nconst TechStack = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const { scrollToTop } = scroll;\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tech-stack-page-container\" data-cy=\"tech-stack-page\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.techStack.headline\"),\r\n            subheadline: t(\"texts.techStack.subheadline\"),\r\n          }}\r\n          borderColorName={\"violet\"}\r\n        />\r\n      </header>\r\n      <div className=\"tech-stack-logos-container\">\r\n        {toolsLogos.map((logo: string, index: number): JSX.Element => {\r\n          return (\r\n            <div className=\"tech-stack-logo\">\r\n              <img\r\n                src={logo}\r\n                loading=\"lazy\"\r\n                alt=\"firm logo\"\r\n                key={`${logo}${index.toString()}`}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechStack;\r\n","type ErrorMessageProps = {\r\n  message: string | null;\r\n  outputFunction: Function;\r\n};\r\n\r\nconst ErrorMessage = ({\r\n  message,\r\n  outputFunction,\r\n}: ErrorMessageProps): JSX.Element | null => {\r\n  if (!message || !message.includes(\"Form\")) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span className=\"error-output is-danger\">{outputFunction(message)}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Link } from \"react-router-dom\";\r\n\r\ntype ContactLinkProps = {\r\n  path: string;\r\n  styleClass: string;\r\n  text: string;\r\n};\r\n\r\nconst ContactLink = ({\r\n  path,\r\n  styleClass,\r\n  text,\r\n}: ContactLinkProps): JSX.Element => {\r\n  return (\r\n    <>\r\n      <span className={styleClass}>\r\n        <Link to={{ pathname: path }} target=\"_blank\">\r\n          <h4 className=\"is-text-nowrap\">{text}</h4>\r\n        </Link>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactLink;\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\ntype ContactFormProps = {\r\n  isCreatingRequest: boolean;\r\n  handleSubmitRequest: Function;\r\n};\r\n\r\nconst ContactForm = ({\r\n  isCreatingRequest,\r\n  handleSubmitRequest,\r\n}: ContactFormProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  const buttonState = (): boolean => {\r\n    return isCreatingRequest ? true : false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(event: React.FormEvent<HTMLFormElement>): void => {\r\n          handleSubmitRequest(event);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder={t(\"texts.contact.createRequest.form.inputEmail\")}\r\n          className=\"form-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"subject\"\r\n          placeholder={t(\"texts.contact.createRequest.form.inputSubject\")}\r\n          className=\"form-input\"\r\n        />\r\n        <textarea\r\n          name=\"message\"\r\n          placeholder={t(\"texts.contact.createRequest.form.inputMessage\")}\r\n          cols={35}\r\n          rows={7}\r\n          className=\"form-textarea\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={buttonState()}\r\n          formNoValidate\r\n          className=\"form-submit\"\r\n        >\r\n          {t(\"button.submit\")}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { useHandleRequest } from \"../app/custom-hooks/useHandleRequest\";\r\nimport {\r\n  setNavItem,\r\n  setErrorMessage,\r\n  selectIsCreatingRequest,\r\n  selectErrorMessage,\r\n} from \"../reducer/creativeGallerySlice\";\r\nimport { Request } from \"../app/typeDefinitions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelopeSquare,\r\n  faMobileAlt,\r\n  faPen,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport HeaderText from \"../components/helpers/HeaderText\";\r\nimport ErrorMessage from \"../components/helpers/ErrorMessage\";\r\nimport ContactLink from \"../components/contact/ContactLink\";\r\nimport ContactForm from \"../components/contact/ContactForm\";\r\n\r\nconst Contact = (): JSX.Element => {\r\n  const isCreatingRequest = useAppSelector(selectIsCreatingRequest);\r\n  const errorMessage = useAppSelector(selectErrorMessage);\r\n  const dispatch = useAppDispatch();\r\n  const { push } = useHistory();\r\n  const { createRequest } = useHandleRequest();\r\n  const { t } = useTranslation();\r\n  const { scrollToTop } = scroll;\r\n\r\n  useEffect(() => {\r\n    const setErrorMessageAndScrollToTop = (): void => {\r\n      dispatch(setErrorMessage(null));\r\n      scrollToTop();\r\n    };\r\n\r\n    setErrorMessageAndScrollToTop();\r\n  }, []);\r\n\r\n  const handleSubmitRequest = (\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): void => {\r\n    const {\r\n      target: { email, subject, message },\r\n    } = event as any;\r\n    const newRequest: Request = {\r\n      email: email.value,\r\n      subject: subject.value,\r\n      message: message.value,\r\n    };\r\n    event.preventDefault();\r\n    createRequest(newRequest, (): void => {\r\n      dispatch(setNavItem(\"home\"));\r\n      push(\"/\");\r\n    });\r\n  };\r\n\r\n  const convertErrorMessage = (errorMessage: string): string => {\r\n    switch (errorMessage) {\r\n      case \"Form: Email missing\":\r\n        return t(\"errorTexts.createRequest.form.emailMissing\");\r\n      case \"Form: Subject missing\":\r\n        return t(\"errorTexts.createRequest.form.subjectMissing\");\r\n      case \"Form: Message missing\":\r\n        return t(\"errorTexts.createRequest.form.messageMissing\");\r\n      case \"Form: Email format invalid\":\r\n        return t(\"errorTexts.createRequest.form.emailFormatInvalid\");\r\n      default:\r\n        return t(\"errorTexts.general\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-page-container\" data-cy=\"contact-page\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.contact.headline\"),\r\n            subheadline: t(\"texts.contact.subheadline\"),\r\n          }}\r\n          borderColorName={\"blue\"}\r\n        />\r\n      </header>\r\n      <div className=\"contact-container\">\r\n        <h1>{t(\"texts.contact.name\")}</h1>\r\n        <h2>{t(\"texts.contact.jobname\")}</h2>\r\n        <div className=\"contact-ways-container\">\r\n          <div className=\"contact-email-container\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faEnvelopeSquare} />{\" \"}\r\n              {t(\"texts.contact.email\")}\r\n            </h3>\r\n            <ContactLink\r\n              path=\"mailto:chr_gerbig@web.de\"\r\n              styleClass=\"contact-link\"\r\n              text={t(\"texts.contact.emailAddress\")}\r\n            />\r\n          </div>\r\n          <div className=\"contact-phone-container\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faMobileAlt} /> {t(\"texts.contact.phone\")}\r\n            </h3>\r\n            <ContactLink\r\n              path=\"tel:+4915154824288\"\r\n              styleClass=\"contact-link\"\r\n              text={t(\"texts.contact.phoneNumber\")}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>\r\n            <FontAwesomeIcon icon={faPen} /> {t(\"texts.contact.submit\")}\r\n          </h3>\r\n        </div>\r\n        <ErrorMessage\r\n          message={errorMessage}\r\n          outputFunction={convertErrorMessage}\r\n        />\r\n        <ContactForm\r\n          isCreatingRequest={isCreatingRequest}\r\n          handleSubmitRequest={handleSubmitRequest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { useAppDispatch } from \"../hooks\";\r\nimport {\r\n  createRequest,\r\n  setErrorMessage,\r\n} from \"../../reducer/creativeGallerySlice\";\r\nimport { Request } from \"../typeDefinitions\";\r\n\r\ntype HandleRequest = {\r\n  createRequest: Function;\r\n};\r\n\r\nexport const useHandleRequest = (): HandleRequest => {\r\n  const dispatch = useAppDispatch();\r\n  const handleRequest = {\r\n    createRequest: (newRequest: Request, callbackFunction: Function): void => {\r\n      dispatch(createRequest(newRequest))\r\n        .unwrap()\r\n        .then((): void => {\r\n          callbackFunction();\r\n        })\r\n        .catch((err: any): void => {\r\n          dispatch(setErrorMessage(err.message));\r\n        });\r\n    },\r\n  };\r\n  return handleRequest;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HeaderText from \"../components/helpers/HeaderText\";\r\n\r\nconst NotFound = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"page-not-found-container\">\r\n      <header className=\"headline\">\r\n        <HeaderText\r\n          headlines={{\r\n            headline: t(\"texts.pageNotFound.headline\"),\r\n            subheadline: t(\"texts.pageNotFound.subheadline\"),\r\n          }}\r\n          borderColorName={\"orange\"}\r\n        />\r\n      </header>\r\n      <div className=\"page-not-found-get-back-container\">\r\n        <Link to={\"/\"} className=\"page-not-found-get-back-link\">\r\n          {t(\"link.getBack\")}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { setErrorMessage } from \"../../reducer/creativeGallerySlice\";\r\n\r\ntype ModalBodyProps = {\r\n  headline: string;\r\n  text: string;\r\n  isClose: boolean;\r\n};\r\n\r\nconst ModalBody = ({\r\n  headline,\r\n  text,\r\n  isClose,\r\n}: ModalBodyProps): JSX.Element => {\r\n  const divElementRef = useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const handleCloseModal = (): void => {\r\n    dispatch(setErrorMessage(null));\r\n  };\r\n\r\n  const handleClickOutside = ({ target }: any): void => {\r\n    if (divElementRef.current === target) {\r\n      handleCloseModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={divElementRef}\r\n      className=\"error-modal fade-error-modal-in\"\r\n      onClick={(event: any): void => {\r\n        isClose && handleClickOutside(event);\r\n      }}\r\n    >\r\n      <div className=\"error-modal-box\">\r\n        <h1>{headline}</h1>\r\n        <h2>{text}</h2>\r\n        {isClose && (\r\n          <button\r\n            className=\"error-modal-button mt-4 mb-3\"\r\n            onClick={handleCloseModal}\r\n          >\r\n            {t(\"button.proceed\")}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalBody;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport ModalBody from \"./ModalBody\";\r\n\r\ntype ErrorModalProps = {\r\n  message: string | null;\r\n};\r\n\r\nconst ErrorModal = ({ message }: ErrorModalProps): JSX.Element | null => {\r\n  const { t } = useTranslation();\r\n\r\n  const convertErrorMessage = (message: string): string => {\r\n    switch (message) {\r\n      case \"Create request failed\":\r\n        return t(\"errorTexts.createRequest.createRequestFailed\");\r\n      default:\r\n        return t(\"errors.general\");\r\n    }\r\n  };\r\n\r\n  if (!message || message.includes(\"Form\")) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ModalBody\r\n        headline={t(\"errorModal.headline\")}\r\n        text={convertErrorMessage(message)}\r\n        isClose={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport ModalBody from \"./ModalBody\";\r\n\r\ntype OfflineModalProps = {\r\n  isOnline: boolean;\r\n};\r\n\r\nconst OfflineModal = ({ isOnline }: OfflineModalProps): JSX.Element | null => {\r\n  const { t } = useTranslation();\r\n\r\n  if (isOnline) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ModalBody\r\n        headline={t(\"texts.offlineModal.headline\")}\r\n        text={t(\"errorTexts.offline\")}\r\n        isClose={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfflineModal;\r\n","import { useAppSelector } from \"../../app/hooks\";\r\nimport { useOnlineStatus } from \"../../app/custom-hooks/useOnlineStatus\";\r\nimport { selectErrorMessage } from \"../../reducer/creativeGallerySlice\";\r\nimport ErrorModal from \"./ErrorModal\";\r\nimport OfflineModal from \"./OfflineModal\";\r\n\r\nconst Modals = (): JSX.Element => {\r\n  const errorMessage = useAppSelector(selectErrorMessage);\r\n  const isOnline = useOnlineStatus();\r\n\r\n  if (isOnline) {\r\n    return <ErrorModal message={errorMessage} />;\r\n  }\r\n  return <OfflineModal isOnline={isOnline} />;\r\n};\r\n\r\nexport default Modals;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useOnlineStatus = (): boolean => {\r\n  const [isOnline, setIsOnline] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const handleOfflineEventCallback = (): void => {\r\n      setIsOnline(false);\r\n    };\r\n\r\n    const handleOnlineEventCallback = (): void => {\r\n      setIsOnline(true);\r\n    };\r\n\r\n    window.addEventListener(\"offline\", handleOfflineEventCallback);\r\n    window.addEventListener(\"online\", handleOnlineEventCallback);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"offline\", handleOfflineEventCallback);\r\n      window.removeEventListener(\"online\", handleOnlineEventCallback);\r\n    };\r\n  }, []);\r\n\r\n  return isOnline;\r\n};\r\n","import { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport NavBar from \"./components/navigation/NavBar\";\r\nimport NavMenu from \"./components/navigation/NavMenu\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./views/Home\";\r\nimport About from \"./views/About\";\r\nimport Projects from \"./views/Projects\";\r\nimport TechStack from \"./views/TechStack\";\r\nimport Contact from \"./views/Contact\";\r\nimport NotFound from \"./views/NotFound\";\r\nimport Modals from \"./components/modals/Modals\";\r\n\r\nimport \"./App.min.css\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <NavMenu />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/techstack\">\r\n          <TechStack />\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact />\r\n        </Route>\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n      <Modals />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport creativeGallerySlice from \"../reducer/creativeGallerySlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: { creativeGallery: creativeGallerySlice },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport Backend from \"i18next-http-backend\";\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    ns: [\"translation\"],\r\n    defaultNS: \"translation\",\r\n    backend: {\r\n      loadPath: \"/locales/{{lng}}/{{ns}}.json\",\r\n    },\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./app/store\";\r\nimport \"./index.css\";\r\nimport \"./app/i18n\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Suspense fallback=\"loading\">\r\n          <App />\r\n        </Suspense>\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}